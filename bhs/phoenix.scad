// Generated by png23d

module _phoenix(sx,sy,sz) {
 scale([sx, sy, sz]) union() {
        translate([-526, 366, 0]) cube([2.01, 1.01, 1.01]);
        translate([524, 366, 0]) cube([3.01, 1.01, 1.01]);
        translate([-527, 365, 0]) cube([4.01, 1.01, 1.01]);
        translate([523, 365, 0]) cube([3.01, 1.01, 1.01]);
        translate([-526, 364, 0]) cube([4.01, 1.01, 1.01]);
        translate([522, 364, 0]) cube([4.01, 1.01, 1.01]);
        translate([-526, 363, 0]) cube([5.01, 1.01, 1.01]);
        translate([521, 363, 0]) cube([5.01, 1.01, 1.01]);
        translate([-526, 362, 0]) cube([6.01, 1.01, 1.01]);
        translate([520, 362, 0]) cube([5.01, 1.01, 1.01]);
        translate([-525, 361, 0]) cube([6.01, 1.01, 1.01]);
        translate([519, 361, 0]) cube([6.01, 1.01, 1.01]);
        translate([-525, 360, 0]) cube([7.01, 1.01, 1.01]);
        translate([518, 360, 0]) cube([7.01, 1.01, 1.01]);
        translate([-524, 359, 0]) cube([7.01, 1.01, 1.01]);
        translate([517, 359, 0]) cube([7.01, 1.01, 1.01]);
        translate([-524, 358, 0]) cube([8.01, 1.01, 1.01]);
        translate([516, 358, 0]) cube([8.01, 1.01, 1.01]);
        translate([-524, 357, 0]) cube([9.01, 1.01, 1.01]);
        translate([514, 357, 0]) cube([10.01, 1.01, 1.01]);
        translate([-524, 356, 0]) cube([10.01, 1.01, 1.01]);
        translate([514, 356, 0]) cube([10.01, 1.01, 1.01]);
        translate([-523, 355, 0]) cube([11.01, 1.01, 1.01]);
        translate([512, 355, 0]) cube([11.01, 1.01, 1.01]);
        translate([-523, 354, 0]) cube([12.01, 1.01, 1.01]);
        translate([510, 354, 0]) cube([12.01, 1.01, 1.01]);
        translate([-522, 353, 0]) cube([12.01, 1.01, 1.01]);
        translate([509, 353, 0]) cube([13.01, 1.01, 1.01]);
        translate([-522, 352, 0]) cube([14.01, 1.01, 1.01]);
        translate([508, 352, 0]) cube([14.01, 1.01, 1.01]);
        translate([-522, 351, 0]) cube([16.01, 1.01, 1.01]);
        translate([507, 351, 0]) cube([14.01, 1.01, 1.01]);
        translate([-521, 350, 0]) cube([16.01, 1.01, 1.01]);
        translate([505, 350, 0]) cube([16.01, 1.01, 1.01]);
        translate([-520, 349, 0]) cube([16.01, 1.01, 1.01]);
        translate([504, 349, 0]) cube([16.01, 1.01, 1.01]);
        translate([-520, 348, 0]) cube([18.01, 1.01, 1.01]);
        translate([502, 348, 0]) cube([18.01, 1.01, 1.01]);
        translate([-520, 347, 0]) cube([19.01, 1.01, 1.01]);
        translate([501, 347, 0]) cube([18.01, 1.01, 1.01]);
        translate([-519, 346, 0]) cube([20.01, 1.01, 1.01]);
        translate([499, 346, 0]) cube([20.01, 1.01, 1.01]);
        translate([-519, 345, 0]) cube([21.01, 1.01, 1.01]);
        translate([497, 345, 0]) cube([21.01, 1.01, 1.01]);
        translate([-518, 344, 0]) cube([23.01, 1.01, 1.01]);
        translate([495, 344, 0]) cube([23.01, 1.01, 1.01]);
        translate([-517, 343, 0]) cube([23.01, 1.01, 1.01]);
        translate([494, 343, 0]) cube([23.01, 1.01, 1.01]);
        translate([-517, 342, 0]) cube([26.01, 1.01, 1.01]);
        translate([491, 342, 0]) cube([26.01, 1.01, 1.01]);
        translate([-517, 341, 0]) cube([27.01, 1.01, 1.01]);
        translate([490, 341, 0]) cube([27.01, 1.01, 1.01]);
        translate([-516, 340, 0]) cube([28.01, 1.01, 1.01]);
        translate([488, 340, 0]) cube([28.01, 1.01, 1.01]);
        translate([-515, 339, 0]) cube([29.01, 1.01, 1.01]);
        translate([486, 339, 0]) cube([29.01, 1.01, 1.01]);
        translate([-515, 338, 0]) cube([31.01, 1.01, 1.01]);
        translate([484, 338, 0]) cube([31.01, 1.01, 1.01]);
        translate([-514, 337, 0]) cube([32.01, 1.01, 1.01]);
        translate([481, 337, 0]) cube([33.01, 1.01, 1.01]);
        translate([-514, 336, 0]) cube([34.01, 1.01, 1.01]);
        translate([480, 336, 0]) cube([34.01, 1.01, 1.01]);
        translate([-513, 335, 0]) cube([37.01, 1.01, 1.01]);
        translate([477, 335, 0]) cube([36.01, 1.01, 1.01]);
        translate([-513, 334, 0]) cube([38.01, 1.01, 1.01]);
        translate([475, 334, 0]) cube([38.01, 1.01, 1.01]);
        translate([-512, 333, 0]) cube([40.01, 1.01, 1.01]);
        translate([472, 333, 0]) cube([40.01, 1.01, 1.01]);
        translate([-511, 332, 0]) cube([41.01, 1.01, 1.01]);
        translate([470, 332, 0]) cube([41.01, 1.01, 1.01]);
        translate([-511, 331, 0]) cube([44.01, 1.01, 1.01]);
        translate([466, 331, 0]) cube([45.01, 1.01, 1.01]);
        translate([-510, 330, 0]) cube([46.01, 1.01, 1.01]);
        translate([464, 330, 0]) cube([46.01, 1.01, 1.01]);
        translate([-510, 329, 0]) cube([49.01, 1.01, 1.01]);
        translate([459, 329, 0]) cube([50.01, 1.01, 1.01]);
        translate([-509, 328, 0]) cube([51.01, 1.01, 1.01]);
        translate([456, 328, 0]) cube([53.01, 1.01, 1.01]);
        translate([-508, 327, 0]) cube([54.01, 1.01, 1.01]);
        translate([454, 327, 0]) cube([54.01, 1.01, 1.01]);
        translate([-508, 326, 0]) cube([59.01, 1.01, 1.01]);
        translate([448, 326, 0]) cube([60.01, 1.01, 1.01]);
        translate([-507, 325, 0]) cube([60.01, 1.01, 1.01]);
        translate([446, 325, 0]) cube([61.01, 1.01, 1.01]);
        translate([-506, 324, 0]) cube([65.01, 1.01, 1.01]);
        translate([441, 324, 0]) cube([65.01, 1.01, 1.01]);
        translate([-506, 323, 0]) cube([69.01, 1.01, 1.01]);
        translate([437, 323, 0]) cube([69.01, 1.01, 1.01]);
        translate([-505, 322, 0]) cube([75.01, 1.01, 1.01]);
        translate([430, 322, 0]) cube([75.01, 1.01, 1.01]);
        translate([-504, 321, 0]) cube([79.01, 1.01, 1.01]);
        translate([425, 321, 0]) cube([79.01, 1.01, 1.01]);
        translate([-504, 320, 0]) cube([86.01, 1.01, 1.01]);
        translate([417, 320, 0]) cube([87.01, 1.01, 1.01]);
        translate([-503, 319, 0]) cube([91.01, 1.01, 1.01]);
        translate([410, 319, 0]) cube([93.01, 1.01, 1.01]);
        translate([-502, 318, 0]) cube([95.01, 1.01, 1.01]);
        translate([406, 318, 0]) cube([97.01, 1.01, 1.01]);
        translate([-502, 317, 0]) cube([101.01, 1.01, 1.01]);
        translate([399, 317, 0]) cube([103.01, 1.01, 1.01]);
        translate([-501, 316, 0]) cube([104.01, 1.01, 1.01]);
        translate([396, 316, 0]) cube([105.01, 1.01, 1.01]);
        translate([-501, 315, 0]) cube([109.01, 1.01, 1.01]);
        translate([391, 315, 0]) cube([109.01, 1.01, 1.01]);
        translate([-500, 314, 0]) cube([111.01, 1.01, 1.01]);
        translate([388, 314, 0]) cube([112.01, 1.01, 1.01]);
        translate([-499, 313, 0]) cube([116.01, 1.01, 1.01]);
        translate([382, 313, 0]) cube([117.01, 1.01, 1.01]);
        translate([-499, 312, 0]) cube([119.01, 1.01, 1.01]);
        translate([379, 312, 0]) cube([119.01, 1.01, 1.01]);
        translate([-497, 311, 0]) cube([122.01, 1.01, 1.01]);
        translate([375, 311, 0]) cube([122.01, 1.01, 1.01]);
        translate([-497, 310, 0]) cube([124.01, 1.01, 1.01]);
        translate([371, 310, 0]) cube([126.01, 1.01, 1.01]);
        translate([-496, 309, 0]) cube([127.01, 1.01, 1.01]);
        translate([369, 309, 0]) cube([127.01, 1.01, 1.01]);
        translate([-495, 308, 0]) cube([129.01, 1.01, 1.01]);
        translate([366, 308, 0]) cube([129.01, 1.01, 1.01]);
        translate([-495, 307, 0]) cube([131.01, 1.01, 1.01]);
        translate([363, 307, 0]) cube([131.01, 1.01, 1.01]);
        translate([-494, 306, 0]) cube([135.01, 1.01, 1.01]);
        translate([359, 306, 0]) cube([134.01, 1.01, 1.01]);
        translate([-493, 305, 0]) cube([136.01, 1.01, 1.01]);
        translate([357, 305, 0]) cube([136.01, 1.01, 1.01]);
        translate([-492, 304, 0]) cube([138.01, 1.01, 1.01]);
        translate([354, 304, 0]) cube([138.01, 1.01, 1.01]);
        translate([-491, 303, 0]) cube([139.01, 1.01, 1.01]);
        translate([352, 303, 0]) cube([139.01, 1.01, 1.01]);
        translate([-490, 302, 0]) cube([141.01, 1.01, 1.01]);
        translate([348, 302, 0]) cube([142.01, 1.01, 1.01]);
        translate([-490, 301, 0]) cube([144.01, 1.01, 1.01]);
        translate([346, 301, 0]) cube([143.01, 1.01, 1.01]);
        translate([-489, 300, 0]) cube([145.01, 1.01, 1.01]);
        translate([344, 300, 0]) cube([145.01, 1.01, 1.01]);
        translate([-488, 299, 0]) cube([146.01, 1.01, 1.01]);
        translate([341, 299, 0]) cube([147.01, 1.01, 1.01]);
        translate([-487, 298, 0]) cube([147.01, 1.01, 1.01]);
        translate([339, 298, 0]) cube([148.01, 1.01, 1.01]);
        translate([-486, 297, 0]) cube([149.01, 1.01, 1.01]);
        translate([337, 297, 0]) cube([149.01, 1.01, 1.01]);
        translate([-486, 296, 0]) cube([150.01, 1.01, 1.01]);
        translate([335, 296, 0]) cube([150.01, 1.01, 1.01]);
        translate([-485, 295, 0]) cube([152.01, 1.01, 1.01]);
        translate([333, 295, 0]) cube([151.01, 1.01, 1.01]);
        translate([-484, 294, 0]) cube([152.01, 1.01, 1.01]);
        translate([331, 294, 0]) cube([153.01, 1.01, 1.01]);
        translate([-483, 293, 0]) cube([153.01, 1.01, 1.01]);
        translate([329, 293, 0]) cube([154.01, 1.01, 1.01]);
        translate([-482, 292, 0]) cube([154.01, 1.01, 1.01]);
        translate([327, 292, 0]) cube([155.01, 1.01, 1.01]);
        translate([-481, 291, 0]) cube([156.01, 1.01, 1.01]);
        translate([325, 291, 0]) cube([156.01, 1.01, 1.01]);
        translate([-481, 290, 0]) cube([157.01, 1.01, 1.01]);
        translate([323, 290, 0]) cube([157.01, 1.01, 1.01]);
        translate([-479, 289, 0]) cube([157.01, 1.01, 1.01]);
        translate([322, 289, 0]) cube([157.01, 1.01, 1.01]);
        translate([-479, 288, 0]) cube([159.01, 1.01, 1.01]);
        translate([319, 288, 0]) cube([159.01, 1.01, 1.01]);
        translate([-477, 287, 0]) cube([159.01, 1.01, 1.01]);
        translate([318, 287, 0]) cube([159.01, 1.01, 1.01]);
        translate([-477, 286, 0]) cube([161.01, 1.01, 1.01]);
        translate([316, 286, 0]) cube([161.01, 1.01, 1.01]);
        translate([-476, 285, 0]) cube([161.01, 1.01, 1.01]);
        translate([315, 285, 0]) cube([161.01, 1.01, 1.01]);
        translate([-475, 284, 0]) cube([162.01, 1.01, 1.01]);
        translate([313, 284, 0]) cube([162.01, 1.01, 1.01]);
        translate([-474, 283, 0]) cube([162.01, 1.01, 1.01]);
        translate([312, 283, 0]) cube([162.01, 1.01, 1.01]);
        translate([-473, 282, 0]) cube([163.01, 1.01, 1.01]);
        translate([310, 282, 0]) cube([163.01, 1.01, 1.01]);
        translate([-486, 281, 0]) cube([2.01, 1.01, 1.01]);
        translate([-472, 281, 0]) cube([163.01, 1.01, 1.01]);
        translate([309, 281, 0]) cube([163.01, 1.01, 1.01]);
        translate([-487, 280, 0]) cube([3.01, 1.01, 1.01]);
        translate([-471, 280, 0]) cube([163.01, 1.01, 1.01]);
        translate([308, 280, 0]) cube([163.01, 1.01, 1.01]);
        translate([484, 280, 0]) cube([2.01, 1.01, 1.01]);
        translate([-487, 279, 0]) cube([4.01, 1.01, 1.01]);
        translate([-470, 279, 0]) cube([164.01, 1.01, 1.01]);
        translate([306, 279, 0]) cube([164.01, 1.01, 1.01]);
        translate([483, 279, 0]) cube([3.01, 1.01, 1.01]);
        translate([-486, 278, 0]) cube([4.01, 1.01, 1.01]);
        translate([-469, 278, 0]) cube([164.01, 1.01, 1.01]);
        translate([305, 278, 0]) cube([164.01, 1.01, 1.01]);
        translate([482, 278, 0]) cube([4.01, 1.01, 1.01]);
        translate([-486, 277, 0]) cube([5.01, 1.01, 1.01]);
        translate([-468, 277, 0]) cube([165.01, 1.01, 1.01]);
        translate([303, 277, 0]) cube([165.01, 1.01, 1.01]);
        translate([481, 277, 0]) cube([5.01, 1.01, 1.01]);
        translate([-486, 276, 0]) cube([6.01, 1.01, 1.01]);
        translate([-467, 276, 0]) cube([165.01, 1.01, 1.01]);
        translate([302, 276, 0]) cube([165.01, 1.01, 1.01]);
        translate([480, 276, 0]) cube([6.01, 1.01, 1.01]);
        translate([-486, 275, 0]) cube([7.01, 1.01, 1.01]);
        translate([-466, 275, 0]) cube([165.01, 1.01, 1.01]);
        translate([300, 275, 0]) cube([166.01, 1.01, 1.01]);
        translate([479, 275, 0]) cube([7.01, 1.01, 1.01]);
        translate([-486, 274, 0]) cube([8.01, 1.01, 1.01]);
        translate([-465, 274, 0]) cube([165.01, 1.01, 1.01]);
        translate([300, 274, 0]) cube([165.01, 1.01, 1.01]);
        translate([478, 274, 0]) cube([8.01, 1.01, 1.01]);
        translate([-486, 273, 0]) cube([9.01, 1.01, 1.01]);
        translate([-464, 273, 0]) cube([166.01, 1.01, 1.01]);
        translate([298, 273, 0]) cube([166.01, 1.01, 1.01]);
        translate([477, 273, 0]) cube([9.01, 1.01, 1.01]);
        translate([-486, 272, 0]) cube([10.01, 1.01, 1.01]);
        translate([-463, 272, 0]) cube([165.01, 1.01, 1.01]);
        translate([298, 272, 0]) cube([165.01, 1.01, 1.01]);
        translate([476, 272, 0]) cube([9.01, 1.01, 1.01]);
        translate([-486, 271, 0]) cube([11.01, 1.01, 1.01]);
        translate([-462, 271, 0]) cube([166.01, 1.01, 1.01]);
        translate([296, 271, 0]) cube([166.01, 1.01, 1.01]);
        translate([475, 271, 0]) cube([10.01, 1.01, 1.01]);
        translate([-486, 270, 0]) cube([12.01, 1.01, 1.01]);
        translate([-461, 270, 0]) cube([166.01, 1.01, 1.01]);
        translate([295, 270, 0]) cube([166.01, 1.01, 1.01]);
        translate([474, 270, 0]) cube([11.01, 1.01, 1.01]);
        translate([-485, 269, 0]) cube([12.01, 1.01, 1.01]);
        translate([-460, 269, 0]) cube([166.01, 1.01, 1.01]);
        translate([294, 269, 0]) cube([165.01, 1.01, 1.01]);
        translate([473, 269, 0]) cube([12.01, 1.01, 1.01]);
        translate([-485, 268, 0]) cube([13.01, 1.01, 1.01]);
        translate([-459, 268, 0]) cube([166.01, 1.01, 1.01]);
        translate([293, 268, 0]) cube([166.01, 1.01, 1.01]);
        translate([472, 268, 0]) cube([13.01, 1.01, 1.01]);
        translate([-485, 267, 0]) cube([14.01, 1.01, 1.01]);
        translate([-457, 267, 0]) cube([165.01, 1.01, 1.01]);
        translate([292, 267, 0]) cube([166.01, 1.01, 1.01]);
        translate([471, 267, 0]) cube([13.01, 1.01, 1.01]);
        translate([-484, 266, 0]) cube([14.01, 1.01, 1.01]);
        translate([-457, 266, 0]) cube([166.01, 1.01, 1.01]);
        translate([291, 266, 0]) cube([166.01, 1.01, 1.01]);
        translate([470, 266, 0]) cube([14.01, 1.01, 1.01]);
        translate([-484, 265, 0]) cube([14.01, 1.01, 1.01]);
        translate([-456, 265, 0]) cube([165.01, 1.01, 1.01]);
        translate([291, 265, 0]) cube([165.01, 1.01, 1.01]);
        translate([469, 265, 0]) cube([15.01, 1.01, 1.01]);
        translate([-484, 264, 0]) cube([16.01, 1.01, 1.01]);
        translate([-455, 264, 0]) cube([165.01, 1.01, 1.01]);
        translate([289, 264, 0]) cube([166.01, 1.01, 1.01]);
        translate([468, 264, 0]) cube([16.01, 1.01, 1.01]);
        translate([-484, 263, 0]) cube([17.01, 1.01, 1.01]);
        translate([-453, 263, 0]) cube([164.01, 1.01, 1.01]);
        translate([289, 263, 0]) cube([164.01, 1.01, 1.01]);
        translate([467, 263, 0]) cube([17.01, 1.01, 1.01]);
        translate([-483, 262, 0]) cube([17.01, 1.01, 1.01]);
        translate([-452, 262, 0]) cube([164.01, 1.01, 1.01]);
        translate([288, 262, 0]) cube([164.01, 1.01, 1.01]);
        translate([466, 262, 0]) cube([17.01, 1.01, 1.01]);
        translate([-483, 261, 0]) cube([19.01, 1.01, 1.01]);
        translate([-451, 261, 0]) cube([164.01, 1.01, 1.01]);
        translate([287, 261, 0]) cube([164.01, 1.01, 1.01]);
        translate([465, 261, 0]) cube([18.01, 1.01, 1.01]);
        translate([-483, 260, 0]) cube([20.01, 1.01, 1.01]);
        translate([-449, 260, 0]) cube([163.01, 1.01, 1.01]);
        translate([286, 260, 0]) cube([163.01, 1.01, 1.01]);
        translate([463, 260, 0]) cube([19.01, 1.01, 1.01]);
        translate([-482, 259, 0]) cube([20.01, 1.01, 1.01]);
        translate([-448, 259, 0]) cube([162.01, 1.01, 1.01]);
        translate([285, 259, 0]) cube([163.01, 1.01, 1.01]);
        translate([462, 259, 0]) cube([20.01, 1.01, 1.01]);
        translate([-482, 258, 0]) cube([21.01, 1.01, 1.01]);
        translate([-447, 258, 0]) cube([162.01, 1.01, 1.01]);
        translate([285, 258, 0]) cube([161.01, 1.01, 1.01]);
        translate([461, 258, 0]) cube([21.01, 1.01, 1.01]);
        translate([-482, 257, 0]) cube([22.01, 1.01, 1.01]);
        translate([-445, 257, 0]) cube([161.01, 1.01, 1.01]);
        translate([284, 257, 0]) cube([161.01, 1.01, 1.01]);
        translate([459, 257, 0]) cube([23.01, 1.01, 1.01]);
        translate([-482, 256, 0]) cube([23.01, 1.01, 1.01]);
        translate([-444, 256, 0]) cube([160.01, 1.01, 1.01]);
        translate([283, 256, 0]) cube([161.01, 1.01, 1.01]);
        translate([458, 256, 0]) cube([23.01, 1.01, 1.01]);
        translate([-481, 255, 0]) cube([24.01, 1.01, 1.01]);
        translate([-442, 255, 0]) cube([159.01, 1.01, 1.01]);
        translate([283, 255, 0]) cube([159.01, 1.01, 1.01]);
        translate([457, 255, 0]) cube([24.01, 1.01, 1.01]);
        translate([-481, 254, 0]) cube([25.01, 1.01, 1.01]);
        translate([-441, 254, 0]) cube([159.01, 1.01, 1.01]);
        translate([282, 254, 0]) cube([159.01, 1.01, 1.01]);
        translate([456, 254, 0]) cube([24.01, 1.01, 1.01]);
        translate([-481, 253, 0]) cube([27.01, 1.01, 1.01]);
        translate([-440, 253, 0]) cube([158.01, 1.01, 1.01]);
        translate([281, 253, 0]) cube([159.01, 1.01, 1.01]);
        translate([454, 253, 0]) cube([26.01, 1.01, 1.01]);
        translate([-480, 252, 0]) cube([27.01, 1.01, 1.01]);
        translate([-438, 252, 0]) cube([157.01, 1.01, 1.01]);
        translate([280, 252, 0]) cube([158.01, 1.01, 1.01]);
        translate([453, 252, 0]) cube([27.01, 1.01, 1.01]);
        translate([-480, 251, 0]) cube([29.01, 1.01, 1.01]);
        translate([-436, 251, 0]) cube([156.01, 1.01, 1.01]);
        translate([280, 251, 0]) cube([157.01, 1.01, 1.01]);
        translate([452, 251, 0]) cube([27.01, 1.01, 1.01]);
        translate([-479, 250, 0]) cube([29.01, 1.01, 1.01]);
        translate([-435, 250, 0]) cube([156.01, 1.01, 1.01]);
        translate([279, 250, 0]) cube([156.01, 1.01, 1.01]);
        translate([450, 250, 0]) cube([29.01, 1.01, 1.01]);
        translate([-479, 249, 0]) cube([31.01, 1.01, 1.01]);
        translate([-433, 249, 0]) cube([154.01, 1.01, 1.01]);
        translate([278, 249, 0]) cube([155.01, 1.01, 1.01]);
        translate([448, 249, 0]) cube([30.01, 1.01, 1.01]);
        translate([-479, 248, 0]) cube([32.01, 1.01, 1.01]);
        translate([-432, 248, 0]) cube([154.01, 1.01, 1.01]);
        translate([278, 248, 0]) cube([154.01, 1.01, 1.01]);
        translate([447, 248, 0]) cube([31.01, 1.01, 1.01]);
        translate([-478, 247, 0]) cube([32.01, 1.01, 1.01]);
        translate([-430, 247, 0]) cube([153.01, 1.01, 1.01]);
        translate([277, 247, 0]) cube([153.01, 1.01, 1.01]);
        translate([446, 247, 0]) cube([31.01, 1.01, 1.01]);
        translate([-477, 246, 0]) cube([33.01, 1.01, 1.01]);
        translate([-429, 246, 0]) cube([153.01, 1.01, 1.01]);
        translate([276, 246, 0]) cube([153.01, 1.01, 1.01]);
        translate([444, 246, 0]) cube([33.01, 1.01, 1.01]);
        translate([-477, 245, 0]) cube([34.01, 1.01, 1.01]);
        translate([-427, 245, 0]) cube([151.01, 1.01, 1.01]);
        translate([275, 245, 0]) cube([152.01, 1.01, 1.01]);
        translate([443, 245, 0]) cube([34.01, 1.01, 1.01]);
        translate([-477, 244, 0]) cube([37.01, 1.01, 1.01]);
        translate([-426, 244, 0]) cube([151.01, 1.01, 1.01]);
        translate([274, 244, 0]) cube([152.01, 1.01, 1.01]);
        translate([440, 244, 0]) cube([36.01, 1.01, 1.01]);
        translate([-476, 243, 0]) cube([37.01, 1.01, 1.01]);
        translate([-424, 243, 0]) cube([150.01, 1.01, 1.01]);
        translate([274, 243, 0]) cube([150.01, 1.01, 1.01]);
        translate([439, 243, 0]) cube([36.01, 1.01, 1.01]);
        translate([-475, 242, 0]) cube([38.01, 1.01, 1.01]);
        translate([-423, 242, 0]) cube([150.01, 1.01, 1.01]);
        translate([273, 242, 0]) cube([149.01, 1.01, 1.01]);
        translate([437, 242, 0]) cube([38.01, 1.01, 1.01]);
        translate([-475, 241, 0]) cube([39.01, 1.01, 1.01]);
        translate([-421, 241, 0]) cube([148.01, 1.01, 1.01]);
        translate([272, 241, 0]) cube([149.01, 1.01, 1.01]);
        translate([436, 241, 0]) cube([39.01, 1.01, 1.01]);
        translate([-475, 240, 0]) cube([41.01, 1.01, 1.01]);
        translate([-419, 240, 0]) cube([147.01, 1.01, 1.01]);
        translate([271, 240, 0]) cube([148.01, 1.01, 1.01]);
        translate([434, 240, 0]) cube([40.01, 1.01, 1.01]);
        translate([-474, 239, 0]) cube([42.01, 1.01, 1.01]);
        translate([-417, 239, 0]) cube([146.01, 1.01, 1.01]);
        translate([271, 239, 0]) cube([146.01, 1.01, 1.01]);
        translate([432, 239, 0]) cube([41.01, 1.01, 1.01]);
        translate([-473, 238, 0]) cube([43.01, 1.01, 1.01]);
        translate([-415, 238, 0]) cube([145.01, 1.01, 1.01]);
        translate([270, 238, 0]) cube([146.01, 1.01, 1.01]);
        translate([430, 238, 0]) cube([43.01, 1.01, 1.01]);
        translate([-473, 237, 0]) cube([45.01, 1.01, 1.01]);
        translate([-414, 237, 0]) cube([145.01, 1.01, 1.01]);
        translate([269, 237, 0]) cube([145.01, 1.01, 1.01]);
        translate([428, 237, 0]) cube([45.01, 1.01, 1.01]);
        translate([-472, 236, 0]) cube([46.01, 1.01, 1.01]);
        translate([-412, 236, 0]) cube([143.01, 1.01, 1.01]);
        translate([269, 236, 0]) cube([142.01, 1.01, 1.01]);
        translate([426, 236, 0]) cube([46.01, 1.01, 1.01]);
        translate([-472, 235, 0]) cube([48.01, 1.01, 1.01]);
        translate([-410, 235, 0]) cube([142.01, 1.01, 1.01]);
        translate([267, 235, 0]) cube([143.01, 1.01, 1.01]);
        translate([424, 235, 0]) cube([47.01, 1.01, 1.01]);
        translate([-471, 234, 0]) cube([48.01, 1.01, 1.01]);
        translate([-408, 234, 0]) cube([141.01, 1.01, 1.01]);
        translate([267, 234, 0]) cube([141.01, 1.01, 1.01]);
        translate([422, 234, 0]) cube([49.01, 1.01, 1.01]);
        translate([-470, 233, 0]) cube([51.01, 1.01, 1.01]);
        translate([-406, 233, 0]) cube([139.01, 1.01, 1.01]);
        translate([266, 233, 0]) cube([141.01, 1.01, 1.01]);
        translate([419, 233, 0]) cube([51.01, 1.01, 1.01]);
        translate([-470, 232, 0]) cube([52.01, 1.01, 1.01]);
        translate([-405, 232, 0]) cube([139.01, 1.01, 1.01]);
        translate([265, 232, 0]) cube([139.01, 1.01, 1.01]);
        translate([418, 232, 0]) cube([51.01, 1.01, 1.01]);
        translate([-469, 231, 0]) cube([54.01, 1.01, 1.01]);
        translate([-402, 231, 0]) cube([137.01, 1.01, 1.01]);
        translate([265, 231, 0]) cube([137.01, 1.01, 1.01]);
        translate([415, 231, 0]) cube([54.01, 1.01, 1.01]);
        translate([-468, 230, 0]) cube([55.01, 1.01, 1.01]);
        translate([-401, 230, 0]) cube([137.01, 1.01, 1.01]);
        translate([264, 230, 0]) cube([137.01, 1.01, 1.01]);
        translate([412, 230, 0]) cube([56.01, 1.01, 1.01]);
        translate([-468, 229, 0]) cube([57.01, 1.01, 1.01]);
        translate([-398, 229, 0]) cube([135.01, 1.01, 1.01]);
        translate([263, 229, 0]) cube([135.01, 1.01, 1.01]);
        translate([410, 229, 0]) cube([57.01, 1.01, 1.01]);
        translate([-467, 228, 0]) cube([59.01, 1.01, 1.01]);
        translate([-396, 228, 0]) cube([134.01, 1.01, 1.01]);
        translate([262, 228, 0]) cube([134.01, 1.01, 1.01]);
        translate([408, 228, 0]) cube([59.01, 1.01, 1.01]);
        translate([-466, 227, 0]) cube([61.01, 1.01, 1.01]);
        translate([-394, 227, 0]) cube([132.01, 1.01, 1.01]);
        translate([261, 227, 0]) cube([133.01, 1.01, 1.01]);
        translate([405, 227, 0]) cube([61.01, 1.01, 1.01]);
        translate([-465, 226, 0]) cube([63.01, 1.01, 1.01]);
        translate([-392, 226, 0]) cube([131.01, 1.01, 1.01]);
        translate([261, 226, 0]) cube([131.01, 1.01, 1.01]);
        translate([402, 226, 0]) cube([63.01, 1.01, 1.01]);
        translate([-465, 225, 0]) cube([65.01, 1.01, 1.01]);
        translate([-389, 225, 0]) cube([129.01, 1.01, 1.01]);
        translate([260, 225, 0]) cube([129.01, 1.01, 1.01]);
        translate([400, 225, 0]) cube([64.01, 1.01, 1.01]);
        translate([-464, 224, 0]) cube([68.01, 1.01, 1.01]);
        translate([-387, 224, 0]) cube([128.01, 1.01, 1.01]);
        translate([259, 224, 0]) cube([127.01, 1.01, 1.01]);
        translate([396, 224, 0]) cube([68.01, 1.01, 1.01]);
        translate([-463, 223, 0]) cube([69.01, 1.01, 1.01]);
        translate([-384, 223, 0]) cube([126.01, 1.01, 1.01]);
        translate([258, 223, 0]) cube([127.01, 1.01, 1.01]);
        translate([394, 223, 0]) cube([69.01, 1.01, 1.01]);
        translate([-462, 222, 0]) cube([72.01, 1.01, 1.01]);
        translate([-381, 222, 0]) cube([123.01, 1.01, 1.01]);
        translate([258, 222, 0]) cube([123.01, 1.01, 1.01]);
        translate([389, 222, 0]) cube([73.01, 1.01, 1.01]);
        translate([-461, 221, 0]) cube([74.01, 1.01, 1.01]);
        translate([-379, 221, 0]) cube([122.01, 1.01, 1.01]);
        translate([257, 221, 0]) cube([122.01, 1.01, 1.01]);
        translate([387, 221, 0]) cube([74.01, 1.01, 1.01]);
        translate([-460, 220, 0]) cube([77.01, 1.01, 1.01]);
        translate([-375, 220, 0]) cube([119.01, 1.01, 1.01]);
        translate([256, 220, 0]) cube([119.01, 1.01, 1.01]);
        translate([382, 220, 0]) cube([78.01, 1.01, 1.01]);
        translate([-460, 219, 0]) cube([80.01, 1.01, 1.01]);
        translate([-373, 219, 0]) cube([118.01, 1.01, 1.01]);
        translate([255, 219, 0]) cube([119.01, 1.01, 1.01]);
        translate([380, 219, 0]) cube([79.01, 1.01, 1.01]);
        translate([-459, 218, 0]) cube([84.01, 1.01, 1.01]);
        translate([-369, 218, 0]) cube([114.01, 1.01, 1.01]);
        translate([254, 218, 0]) cube([115.01, 1.01, 1.01]);
        translate([376, 218, 0]) cube([83.01, 1.01, 1.01]);
        translate([-458, 217, 0]) cube([204.01, 1.01, 1.01]);
        translate([253, 217, 0]) cube([205.01, 1.01, 1.01]);
        translate([-457, 216, 0]) cube([204.01, 1.01, 1.01]);
        translate([252, 216, 0]) cube([205.01, 1.01, 1.01]);
        translate([-467, 215, 0]) cube([1.01, 1.01, 1.01]);
        translate([-456, 215, 0]) cube([204.01, 1.01, 1.01]);
        translate([252, 215, 0]) cube([204.01, 1.01, 1.01]);
        translate([466, 215, 0]) cube([1.01, 1.01, 1.01]);
        translate([-468, 214, 0]) cube([3.01, 1.01, 1.01]);
        translate([-455, 214, 0]) cube([204.01, 1.01, 1.01]);
        translate([251, 214, 0]) cube([204.01, 1.01, 1.01]);
        translate([465, 214, 0]) cube([3.01, 1.01, 1.01]);
        translate([-468, 213, 0]) cube([4.01, 1.01, 1.01]);
        translate([-454, 213, 0]) cube([203.01, 1.01, 1.01]);
        translate([46, 213, 0]) cube([13.01, 1.01, 1.01]);
        translate([250, 213, 0]) cube([204.01, 1.01, 1.01]);
        translate([465, 213, 0]) cube([3.01, 1.01, 1.01]);
        translate([-468, 212, 0]) cube([4.01, 1.01, 1.01]);
        translate([-453, 212, 0]) cube([203.01, 1.01, 1.01]);
        translate([43, 212, 0]) cube([19.01, 1.01, 1.01]);
        translate([249, 212, 0]) cube([204.01, 1.01, 1.01]);
        translate([463, 212, 0]) cube([5.01, 1.01, 1.01]);
        translate([-468, 211, 0]) cube([5.01, 1.01, 1.01]);
        translate([-452, 211, 0]) cube([203.01, 1.01, 1.01]);
        translate([41, 211, 0]) cube([25.01, 1.01, 1.01]);
        translate([249, 211, 0]) cube([203.01, 1.01, 1.01]);
        translate([463, 211, 0]) cube([5.01, 1.01, 1.01]);
        translate([-469, 210, 0]) cube([7.01, 1.01, 1.01]);
        translate([-451, 210, 0]) cube([203.01, 1.01, 1.01]);
        translate([39, 210, 0]) cube([30.01, 1.01, 1.01]);
        translate([248, 210, 0]) cube([203.01, 1.01, 1.01]);
        translate([462, 210, 0]) cube([6.01, 1.01, 1.01]);
        translate([-469, 209, 0]) cube([8.01, 1.01, 1.01]);
        translate([-450, 209, 0]) cube([203.01, 1.01, 1.01]);
        translate([38, 209, 0]) cube([33.01, 1.01, 1.01]);
        translate([247, 209, 0]) cube([203.01, 1.01, 1.01]);
        translate([461, 209, 0]) cube([7.01, 1.01, 1.01]);
        translate([-469, 208, 0]) cube([9.01, 1.01, 1.01]);
        translate([-449, 208, 0]) cube([202.01, 1.01, 1.01]);
        translate([36, 208, 0]) cube([37.01, 1.01, 1.01]);
        translate([246, 208, 0]) cube([202.01, 1.01, 1.01]);
        translate([460, 208, 0]) cube([8.01, 1.01, 1.01]);
        translate([-469, 207, 0]) cube([10.01, 1.01, 1.01]);
        translate([-448, 207, 0]) cube([202.01, 1.01, 1.01]);
        translate([35, 207, 0]) cube([40.01, 1.01, 1.01]);
        translate([245, 207, 0]) cube([202.01, 1.01, 1.01]);
        translate([460, 207, 0]) cube([8.01, 1.01, 1.01]);
        translate([-468, 206, 0]) cube([10.01, 1.01, 1.01]);
        translate([-446, 206, 0]) cube([201.01, 1.01, 1.01]);
        translate([7, 206, 0]) cube([2.01, 1.01, 1.01]);
        translate([34, 206, 0]) cube([43.01, 1.01, 1.01]);
        translate([245, 206, 0]) cube([201.01, 1.01, 1.01]);
        translate([458, 206, 0]) cube([10.01, 1.01, 1.01]);
        translate([-468, 205, 0]) cube([10.01, 1.01, 1.01]);
        translate([-445, 205, 0]) cube([201.01, 1.01, 1.01]);
        translate([0, 205, 0]) cube([10.01, 1.01, 1.01]);
        translate([34, 205, 0]) cube([44.01, 1.01, 1.01]);
        translate([243, 205, 0]) cube([202.01, 1.01, 1.01]);
        translate([457, 205, 0]) cube([11.01, 1.01, 1.01]);
        translate([-468, 204, 0]) cube([12.01, 1.01, 1.01]);
        translate([-444, 204, 0]) cube([201.01, 1.01, 1.01]);
        translate([-4, 204, 0]) cube([13.01, 1.01, 1.01]);
        translate([32, 204, 0]) cube([48.01, 1.01, 1.01]);
        translate([242, 204, 0]) cube([202.01, 1.01, 1.01]);
        translate([456, 204, 0]) cube([12.01, 1.01, 1.01]);
        translate([-468, 203, 0]) cube([13.01, 1.01, 1.01]);
        translate([-443, 203, 0]) cube([201.01, 1.01, 1.01]);
        translate([-6, 203, 0]) cube([14.01, 1.01, 1.01]);
        translate([32, 203, 0]) cube([49.01, 1.01, 1.01]);
        translate([242, 203, 0]) cube([201.01, 1.01, 1.01]);
        translate([455, 203, 0]) cube([13.01, 1.01, 1.01]);
        translate([-468, 202, 0]) cube([14.01, 1.01, 1.01]);
        translate([-441, 202, 0]) cube([200.01, 1.01, 1.01]);
        translate([-8, 202, 0]) cube([15.01, 1.01, 1.01]);
        translate([30, 202, 0]) cube([53.01, 1.01, 1.01]);
        translate([240, 202, 0]) cube([201.01, 1.01, 1.01]);
        translate([454, 202, 0]) cube([13.01, 1.01, 1.01]);
        translate([-468, 201, 0]) cube([15.01, 1.01, 1.01]);
        translate([-440, 201, 0]) cube([200.01, 1.01, 1.01]);
        translate([-10, 201, 0]) cube([16.01, 1.01, 1.01]);
        translate([30, 201, 0]) cube([54.01, 1.01, 1.01]);
        translate([240, 201, 0]) cube([200.01, 1.01, 1.01]);
        translate([453, 201, 0]) cube([14.01, 1.01, 1.01]);
        translate([-467, 200, 0]) cube([15.01, 1.01, 1.01]);
        translate([-438, 200, 0]) cube([198.01, 1.01, 1.01]);
        translate([-12, 200, 0]) cube([17.01, 1.01, 1.01]);
        translate([29, 200, 0]) cube([57.01, 1.01, 1.01]);
        translate([239, 200, 0]) cube([199.01, 1.01, 1.01]);
        translate([452, 200, 0]) cube([15.01, 1.01, 1.01]);
        translate([-466, 199, 0]) cube([16.01, 1.01, 1.01]);
        translate([-437, 199, 0]) cube([199.01, 1.01, 1.01]);
        translate([-14, 199, 0]) cube([18.01, 1.01, 1.01]);
        translate([28, 199, 0]) cube([59.01, 1.01, 1.01]);
        translate([238, 199, 0]) cube([199.01, 1.01, 1.01]);
        translate([450, 199, 0]) cube([16.01, 1.01, 1.01]);
        translate([-466, 198, 0]) cube([17.01, 1.01, 1.01]);
        translate([-436, 198, 0]) cube([198.01, 1.01, 1.01]);
        translate([-15, 198, 0]) cube([19.01, 1.01, 1.01]);
        translate([27, 198, 0]) cube([61.01, 1.01, 1.01]);
        translate([238, 198, 0]) cube([198.01, 1.01, 1.01]);
        translate([449, 198, 0]) cube([17.01, 1.01, 1.01]);
        translate([-466, 197, 0]) cube([18.01, 1.01, 1.01]);
        translate([-435, 197, 0]) cube([198.01, 1.01, 1.01]);
        translate([-17, 197, 0]) cube([20.01, 1.01, 1.01]);
        translate([26, 197, 0]) cube([63.01, 1.01, 1.01]);
        translate([237, 197, 0]) cube([197.01, 1.01, 1.01]);
        translate([447, 197, 0]) cube([19.01, 1.01, 1.01]);
        translate([-465, 196, 0]) cube([19.01, 1.01, 1.01]);
        translate([-433, 196, 0]) cube([197.01, 1.01, 1.01]);
        translate([-17, 196, 0]) cube([19.01, 1.01, 1.01]);
        translate([25, 196, 0]) cube([65.01, 1.01, 1.01]);
        translate([236, 196, 0]) cube([196.01, 1.01, 1.01]);
        translate([446, 196, 0]) cube([19.01, 1.01, 1.01]);
        translate([-464, 195, 0]) cube([19.01, 1.01, 1.01]);
        translate([-432, 195, 0]) cube([197.01, 1.01, 1.01]);
        translate([-19, 195, 0]) cube([21.01, 1.01, 1.01]);
        translate([24, 195, 0]) cube([67.01, 1.01, 1.01]);
        translate([235, 195, 0]) cube([196.01, 1.01, 1.01]);
        translate([444, 195, 0]) cube([20.01, 1.01, 1.01]);
        translate([-464, 194, 0]) cube([20.01, 1.01, 1.01]);
        translate([-430, 194, 0]) cube([196.01, 1.01, 1.01]);
        translate([-20, 194, 0]) cube([22.01, 1.01, 1.01]);
        translate([23, 194, 0]) cube([69.01, 1.01, 1.01]);
        translate([234, 194, 0]) cube([196.01, 1.01, 1.01]);
        translate([443, 194, 0]) cube([21.01, 1.01, 1.01]);
        translate([-463, 193, 0]) cube([21.01, 1.01, 1.01]);
        translate([-428, 193, 0]) cube([195.01, 1.01, 1.01]);
        translate([-21, 193, 0]) cube([23.01, 1.01, 1.01]);
        translate([22, 193, 0]) cube([71.01, 1.01, 1.01]);
        translate([233, 193, 0]) cube([195.01, 1.01, 1.01]);
        translate([441, 193, 0]) cube([22.01, 1.01, 1.01]);
        translate([-462, 192, 0]) cube([22.01, 1.01, 1.01]);
        translate([-427, 192, 0]) cube([194.01, 1.01, 1.01]);
        translate([-22, 192, 0]) cube([24.01, 1.01, 1.01]);
        translate([20, 192, 0]) cube([73.01, 1.01, 1.01]);
        translate([232, 192, 0]) cube([194.01, 1.01, 1.01]);
        translate([440, 192, 0]) cube([22.01, 1.01, 1.01]);
        translate([-461, 191, 0]) cube([23.01, 1.01, 1.01]);
        translate([-425, 191, 0]) cube([194.01, 1.01, 1.01]);
        translate([-24, 191, 0]) cube([26.01, 1.01, 1.01]);
        translate([19, 191, 0]) cube([75.01, 1.01, 1.01]);
        translate([231, 191, 0]) cube([194.01, 1.01, 1.01]);
        translate([438, 191, 0]) cube([23.01, 1.01, 1.01]);
        translate([-460, 190, 0]) cube([23.01, 1.01, 1.01]);
        translate([-424, 190, 0]) cube([193.01, 1.01, 1.01]);
        translate([-24, 190, 0]) cube([27.01, 1.01, 1.01]);
        translate([18, 190, 0]) cube([76.01, 1.01, 1.01]);
        translate([230, 190, 0]) cube([193.01, 1.01, 1.01]);
        translate([437, 190, 0]) cube([23.01, 1.01, 1.01]);
        translate([-459, 189, 0]) cube([24.01, 1.01, 1.01]);
        translate([-422, 189, 0]) cube([193.01, 1.01, 1.01]);
        translate([-26, 189, 0]) cube([30.01, 1.01, 1.01]);
        translate([16, 189, 0]) cube([68.01, 1.01, 1.01]);
        translate([229, 189, 0]) cube([192.01, 1.01, 1.01]);
        translate([435, 189, 0]) cube([24.01, 1.01, 1.01]);
        translate([-458, 188, 0]) cube([25.01, 1.01, 1.01]);
        translate([-420, 188, 0]) cube([191.01, 1.01, 1.01]);
        translate([-27, 188, 0]) cube([33.01, 1.01, 1.01]);
        translate([14, 188, 0]) cube([66.01, 1.01, 1.01]);
        translate([229, 188, 0]) cube([190.01, 1.01, 1.01]);
        translate([433, 188, 0]) cube([25.01, 1.01, 1.01]);
        translate([-457, 187, 0]) cube([26.01, 1.01, 1.01]);
        translate([-417, 187, 0]) cube([189.01, 1.01, 1.01]);
        translate([-28, 187, 0]) cube([104.01, 1.01, 1.01]);
        translate([227, 187, 0]) cube([190.01, 1.01, 1.01]);
        translate([431, 187, 0]) cube([26.01, 1.01, 1.01]);
        translate([-456, 186, 0]) cube([27.01, 1.01, 1.01]);
        translate([-416, 186, 0]) cube([189.01, 1.01, 1.01]);
        translate([-29, 186, 0]) cube([103.01, 1.01, 1.01]);
        translate([227, 186, 0]) cube([189.01, 1.01, 1.01]);
        translate([429, 186, 0]) cube([27.01, 1.01, 1.01]);
        translate([-455, 185, 0]) cube([28.01, 1.01, 1.01]);
        translate([-413, 185, 0]) cube([187.01, 1.01, 1.01]);
        translate([-29, 185, 0]) cube([101.01, 1.01, 1.01]);
        translate([225, 185, 0]) cube([188.01, 1.01, 1.01]);
        translate([427, 185, 0]) cube([28.01, 1.01, 1.01]);
        translate([-454, 184, 0]) cube([29.01, 1.01, 1.01]);
        translate([-411, 184, 0]) cube([186.01, 1.01, 1.01]);
        translate([-30, 184, 0]) cube([99.01, 1.01, 1.01]);
        translate([225, 184, 0]) cube([186.01, 1.01, 1.01]);
        translate([425, 184, 0]) cube([29.01, 1.01, 1.01]);
        translate([-453, 183, 0]) cube([30.01, 1.01, 1.01]);
        translate([-409, 183, 0]) cube([185.01, 1.01, 1.01]);
        translate([-31, 183, 0]) cube([99.01, 1.01, 1.01]);
        translate([223, 183, 0]) cube([186.01, 1.01, 1.01]);
        translate([423, 183, 0]) cube([30.01, 1.01, 1.01]);
        translate([-452, 182, 0]) cube([31.01, 1.01, 1.01]);
        translate([-407, 182, 0]) cube([184.01, 1.01, 1.01]);
        translate([-32, 182, 0]) cube([98.01, 1.01, 1.01]);
        translate([223, 182, 0]) cube([183.01, 1.01, 1.01]);
        translate([421, 182, 0]) cube([31.01, 1.01, 1.01]);
        translate([-452, 181, 0]) cube([34.01, 1.01, 1.01]);
        translate([-405, 181, 0]) cube([183.01, 1.01, 1.01]);
        translate([-33, 181, 0]) cube([98.01, 1.01, 1.01]);
        translate([222, 181, 0]) cube([182.01, 1.01, 1.01]);
        translate([418, 181, 0]) cube([33.01, 1.01, 1.01]);
        translate([-451, 180, 0]) cube([35.01, 1.01, 1.01]);
        translate([-401, 180, 0]) cube([180.01, 1.01, 1.01]);
        translate([-35, 180, 0]) cube([98.01, 1.01, 1.01]);
        translate([221, 180, 0]) cube([180.01, 1.01, 1.01]);
        translate([416, 180, 0]) cube([34.01, 1.01, 1.01]);
        translate([-450, 179, 0]) cube([36.01, 1.01, 1.01]);
        translate([-399, 179, 0]) cube([179.01, 1.01, 1.01]);
        translate([-36, 179, 0]) cube([98.01, 1.01, 1.01]);
        translate([220, 179, 0]) cube([179.01, 1.01, 1.01]);
        translate([414, 179, 0]) cube([36.01, 1.01, 1.01]);
        translate([-449, 178, 0]) cube([38.01, 1.01, 1.01]);
        translate([-394, 178, 0]) cube([175.01, 1.01, 1.01]);
        translate([-37, 178, 0]) cube([98.01, 1.01, 1.01]);
        translate([219, 178, 0]) cube([176.01, 1.01, 1.01]);
        translate([411, 178, 0]) cube([38.01, 1.01, 1.01]);
        translate([-448, 177, 0]) cube([40.01, 1.01, 1.01]);
        translate([-393, 177, 0]) cube([175.01, 1.01, 1.01]);
        translate([-38, 177, 0]) cube([97.01, 1.01, 1.01]);
        translate([218, 177, 0]) cube([174.01, 1.01, 1.01]);
        translate([408, 177, 0]) cube([40.01, 1.01, 1.01]);
        translate([-446, 176, 0]) cube([40.01, 1.01, 1.01]);
        translate([-389, 176, 0]) cube([172.01, 1.01, 1.01]);
        translate([-39, 176, 0]) cube([97.01, 1.01, 1.01]);
        translate([217, 176, 0]) cube([172.01, 1.01, 1.01]);
        translate([406, 176, 0]) cube([40.01, 1.01, 1.01]);
        translate([-446, 175, 0]) cube([43.01, 1.01, 1.01]);
        translate([-386, 175, 0]) cube([170.01, 1.01, 1.01]);
        translate([-41, 175, 0]) cube([99.01, 1.01, 1.01]);
        translate([216, 175, 0]) cube([170.01, 1.01, 1.01]);
        translate([403, 175, 0]) cube([42.01, 1.01, 1.01]);
        translate([-445, 174, 0]) cube([45.01, 1.01, 1.01]);
        translate([-384, 174, 0]) cube([169.01, 1.01, 1.01]);
        translate([-42, 174, 0]) cube([98.01, 1.01, 1.01]);
        translate([215, 174, 0]) cube([169.01, 1.01, 1.01]);
        translate([401, 174, 0]) cube([43.01, 1.01, 1.01]);
        translate([-444, 173, 0]) cube([47.01, 1.01, 1.01]);
        translate([-380, 173, 0]) cube([167.01, 1.01, 1.01]);
        translate([-44, 173, 0]) cube([99.01, 1.01, 1.01]);
        translate([213, 173, 0]) cube([167.01, 1.01, 1.01]);
        translate([396, 173, 0]) cube([48.01, 1.01, 1.01]);
        translate([-443, 172, 0]) cube([48.01, 1.01, 1.01]);
        translate([-378, 172, 0]) cube([165.01, 1.01, 1.01]);
        translate([-46, 172, 0]) cube([100.01, 1.01, 1.01]);
        translate([212, 172, 0]) cube([166.01, 1.01, 1.01]);
        translate([394, 172, 0]) cube([48.01, 1.01, 1.01]);
        translate([-442, 171, 0]) cube([52.01, 1.01, 1.01]);
        translate([-375, 171, 0]) cube([164.01, 1.01, 1.01]);
        translate([-48, 171, 0]) cube([101.01, 1.01, 1.01]);
        translate([211, 171, 0]) cube([163.01, 1.01, 1.01]);
        translate([390, 171, 0]) cube([52.01, 1.01, 1.01]);
        translate([-441, 170, 0]) cube([53.01, 1.01, 1.01]);
        translate([-372, 170, 0]) cube([162.01, 1.01, 1.01]);
        translate([-50, 170, 0]) cube([103.01, 1.01, 1.01]);
        translate([210, 170, 0]) cube([162.01, 1.01, 1.01]);
        translate([387, 170, 0]) cube([54.01, 1.01, 1.01]);
        translate([-440, 169, 0]) cube([56.01, 1.01, 1.01]);
        translate([-368, 169, 0]) cube([159.01, 1.01, 1.01]);
        translate([-54, 169, 0]) cube([106.01, 1.01, 1.01]);
        translate([209, 169, 0]) cube([159.01, 1.01, 1.01]);
        translate([385, 169, 0]) cube([55.01, 1.01, 1.01]);
        translate([-439, 168, 0]) cube([59.01, 1.01, 1.01]);
        translate([-366, 168, 0]) cube([158.01, 1.01, 1.01]);
        translate([-78, 168, 0]) cube([4.01, 1.01, 1.01]);
        translate([-59, 168, 0]) cube([110.01, 1.01, 1.01]);
        translate([208, 168, 0]) cube([157.01, 1.01, 1.01]);
        translate([380, 168, 0]) cube([59.01, 1.01, 1.01]);
        translate([-438, 167, 0]) cube([60.01, 1.01, 1.01]);
        translate([-362, 167, 0]) cube([155.01, 1.01, 1.01]);
        translate([-78, 167, 0]) cube([129.01, 1.01, 1.01]);
        translate([207, 167, 0]) cube([155.01, 1.01, 1.01]);
        translate([378, 167, 0]) cube([60.01, 1.01, 1.01]);
        translate([-437, 166, 0]) cube([64.01, 1.01, 1.01]);
        translate([-360, 166, 0]) cube([154.01, 1.01, 1.01]);
        translate([-77, 166, 0]) cube([127.01, 1.01, 1.01]);
        translate([205, 166, 0]) cube([154.01, 1.01, 1.01]);
        translate([372, 166, 0]) cube([65.01, 1.01, 1.01]);
        translate([-436, 165, 0]) cube([66.01, 1.01, 1.01]);
        translate([-356, 165, 0]) cube([151.01, 1.01, 1.01]);
        translate([-76, 165, 0]) cube([125.01, 1.01, 1.01]);
        translate([204, 165, 0]) cube([152.01, 1.01, 1.01]);
        translate([370, 165, 0]) cube([66.01, 1.01, 1.01]);
        translate([-435, 164, 0]) cube([70.01, 1.01, 1.01]);
        translate([-353, 164, 0]) cube([150.01, 1.01, 1.01]);
        translate([-75, 164, 0]) cube([123.01, 1.01, 1.01]);
        translate([203, 164, 0]) cube([150.01, 1.01, 1.01]);
        translate([365, 164, 0]) cube([70.01, 1.01, 1.01]);
        translate([-434, 163, 0]) cube([72.01, 1.01, 1.01]);
        translate([-350, 163, 0]) cube([148.01, 1.01, 1.01]);
        translate([-74, 163, 0]) cube([121.01, 1.01, 1.01]);
        translate([202, 163, 0]) cube([148.01, 1.01, 1.01]);
        translate([362, 163, 0]) cube([72.01, 1.01, 1.01]);
        translate([-433, 162, 0]) cube([77.01, 1.01, 1.01]);
        translate([-347, 162, 0]) cube([146.01, 1.01, 1.01]);
        translate([-73, 162, 0]) cube([120.01, 1.01, 1.01]);
        translate([200, 162, 0]) cube([146.01, 1.01, 1.01]);
        translate([356, 162, 0]) cube([77.01, 1.01, 1.01]);
        translate([-432, 161, 0]) cube([79.01, 1.01, 1.01]);
        translate([-344, 161, 0]) cube([144.01, 1.01, 1.01]);
        translate([-72, 161, 0]) cube([118.01, 1.01, 1.01]);
        translate([199, 161, 0]) cube([145.01, 1.01, 1.01]);
        translate([352, 161, 0]) cube([80.01, 1.01, 1.01]);
        translate([-431, 160, 0]) cube([84.01, 1.01, 1.01]);
        translate([-341, 160, 0]) cube([143.01, 1.01, 1.01]);
        translate([-70, 160, 0]) cube([116.01, 1.01, 1.01]);
        translate([198, 160, 0]) cube([143.01, 1.01, 1.01]);
        translate([347, 160, 0]) cube([83.01, 1.01, 1.01]);
        translate([-430, 159, 0]) cube([233.01, 1.01, 1.01]);
        translate([-69, 159, 0]) cube([114.01, 1.01, 1.01]);
        translate([197, 159, 0]) cube([233.01, 1.01, 1.01]);
        translate([-429, 158, 0]) cube([233.01, 1.01, 1.01]);
        translate([-66, 158, 0]) cube([29.01, 1.01, 1.01]);
        translate([-35, 158, 0]) cube([79.01, 1.01, 1.01]);
        translate([196, 158, 0]) cube([233.01, 1.01, 1.01]);
        translate([-443, 157, 0]) cube([3.01, 1.01, 1.01]);
        translate([-428, 157, 0]) cube([233.01, 1.01, 1.01]);
        translate([-64, 157, 0]) cube([24.01, 1.01, 1.01]);
        translate([-36, 157, 0]) cube([80.01, 1.01, 1.01]);
        translate([194, 157, 0]) cube([234.01, 1.01, 1.01]);
        translate([440, 157, 0]) cube([3.01, 1.01, 1.01]);
        translate([-443, 156, 0]) cube([4.01, 1.01, 1.01]);
        translate([-426, 156, 0]) cube([232.01, 1.01, 1.01]);
        translate([-59, 156, 0]) cube([14.01, 1.01, 1.01]);
        translate([-37, 156, 0]) cube([81.01, 1.01, 1.01]);
        translate([193, 156, 0]) cube([233.01, 1.01, 1.01]);
        translate([439, 156, 0]) cube([4.01, 1.01, 1.01]);
        translate([-443, 155, 0]) cube([5.01, 1.01, 1.01]);
        translate([-426, 155, 0]) cube([234.01, 1.01, 1.01]);
        translate([-53, 155, 0]) cube([1.01, 1.01, 1.01]);
        translate([-38, 155, 0]) cube([81.01, 1.01, 1.01]);
        translate([191, 155, 0]) cube([234.01, 1.01, 1.01]);
        translate([438, 155, 0]) cube([5.01, 1.01, 1.01]);
        translate([-443, 154, 0]) cube([5.01, 1.01, 1.01]);
        translate([-424, 154, 0]) cube([233.01, 1.01, 1.01]);
        translate([-40, 154, 0]) cube([82.01, 1.01, 1.01]);
        translate([190, 154, 0]) cube([234.01, 1.01, 1.01]);
        translate([438, 154, 0]) cube([5.01, 1.01, 1.01]);
        translate([-442, 153, 0]) cube([6.01, 1.01, 1.01]);
        translate([-423, 153, 0]) cube([234.01, 1.01, 1.01]);
        translate([-43, 153, 0]) cube([85.01, 1.01, 1.01]);
        translate([189, 153, 0]) cube([234.01, 1.01, 1.01]);
        translate([436, 153, 0]) cube([6.01, 1.01, 1.01]);
        translate([-442, 152, 0]) cube([7.01, 1.01, 1.01]);
        translate([-422, 152, 0]) cube([234.01, 1.01, 1.01]);
        translate([-46, 152, 0]) cube([88.01, 1.01, 1.01]);
        translate([187, 152, 0]) cube([235.01, 1.01, 1.01]);
        translate([436, 152, 0]) cube([6.01, 1.01, 1.01]);
        translate([-442, 151, 0]) cube([8.01, 1.01, 1.01]);
        translate([-421, 151, 0]) cube([235.01, 1.01, 1.01]);
        translate([-67, 151, 0]) cube([5.01, 1.01, 1.01]);
        translate([-52, 151, 0]) cube([93.01, 1.01, 1.01]);
        translate([186, 151, 0]) cube([235.01, 1.01, 1.01]);
        translate([434, 151, 0]) cube([8.01, 1.01, 1.01]);
        translate([-442, 150, 0]) cube([9.01, 1.01, 1.01]);
        translate([-420, 150, 0]) cube([235.01, 1.01, 1.01]);
        translate([-67, 150, 0]) cube([107.01, 1.01, 1.01]);
        translate([184, 150, 0]) cube([236.01, 1.01, 1.01]);
        translate([433, 150, 0]) cube([9.01, 1.01, 1.01]);
        translate([-442, 149, 0]) cube([10.01, 1.01, 1.01]);
        translate([-419, 149, 0]) cube([236.01, 1.01, 1.01]);
        translate([-66, 149, 0]) cube([106.01, 1.01, 1.01]);
        translate([183, 149, 0]) cube([236.01, 1.01, 1.01]);
        translate([432, 149, 0]) cube([9.01, 1.01, 1.01]);
        translate([-441, 148, 0]) cube([9.01, 1.01, 1.01]);
        translate([-418, 148, 0]) cube([236.01, 1.01, 1.01]);
        translate([-65, 148, 0]) cube([105.01, 1.01, 1.01]);
        translate([181, 148, 0]) cube([237.01, 1.01, 1.01]);
        translate([431, 148, 0]) cube([10.01, 1.01, 1.01]);
        translate([-441, 147, 0]) cube([11.01, 1.01, 1.01]);
        translate([-417, 147, 0]) cube([237.01, 1.01, 1.01]);
        translate([-63, 147, 0]) cube([102.01, 1.01, 1.01]);
        translate([180, 147, 0]) cube([237.01, 1.01, 1.01]);
        translate([430, 147, 0]) cube([10.01, 1.01, 1.01]);
        translate([-440, 146, 0]) cube([11.01, 1.01, 1.01]);
        translate([-416, 146, 0]) cube([238.01, 1.01, 1.01]);
        translate([-62, 146, 0]) cube([100.01, 1.01, 1.01]);
        translate([177, 146, 0]) cube([239.01, 1.01, 1.01]);
        translate([429, 146, 0]) cube([11.01, 1.01, 1.01]);
        translate([-440, 145, 0]) cube([11.01, 1.01, 1.01]);
        translate([-414, 145, 0]) cube([238.01, 1.01, 1.01]);
        translate([-60, 145, 0]) cube([98.01, 1.01, 1.01]);
        translate([176, 145, 0]) cube([239.01, 1.01, 1.01]);
        translate([428, 145, 0]) cube([12.01, 1.01, 1.01]);
        translate([-439, 144, 0]) cube([12.01, 1.01, 1.01]);
        translate([-413, 144, 0]) cube([239.01, 1.01, 1.01]);
        translate([-58, 144, 0]) cube([95.01, 1.01, 1.01]);
        translate([174, 144, 0]) cube([239.01, 1.01, 1.01]);
        translate([427, 144, 0]) cube([12.01, 1.01, 1.01]);
        translate([-439, 143, 0]) cube([13.01, 1.01, 1.01]);
        translate([-412, 143, 0]) cube([239.01, 1.01, 1.01]);
        translate([-55, 143, 0]) cube([32.01, 1.01, 1.01]);
        translate([-21, 143, 0]) cube([58.01, 1.01, 1.01]);
        translate([173, 143, 0]) cube([239.01, 1.01, 1.01]);
        translate([426, 143, 0]) cube([13.01, 1.01, 1.01]);
        translate([-438, 142, 0]) cube([13.01, 1.01, 1.01]);
        translate([-411, 142, 0]) cube([241.01, 1.01, 1.01]);
        translate([-53, 142, 0]) cube([26.01, 1.01, 1.01]);
        translate([-22, 142, 0]) cube([58.01, 1.01, 1.01]);
        translate([170, 142, 0]) cube([241.01, 1.01, 1.01]);
        translate([425, 142, 0]) cube([13.01, 1.01, 1.01]);
        translate([-437, 141, 0]) cube([13.01, 1.01, 1.01]);
        translate([-410, 141, 0]) cube([242.01, 1.01, 1.01]);
        translate([-50, 141, 0]) cube([19.01, 1.01, 1.01]);
        translate([-23, 141, 0]) cube([59.01, 1.01, 1.01]);
        translate([168, 141, 0]) cube([242.01, 1.01, 1.01]);
        translate([424, 141, 0]) cube([13.01, 1.01, 1.01]);
        translate([-437, 140, 0]) cube([14.01, 1.01, 1.01]);
        translate([-408, 140, 0]) cube([242.01, 1.01, 1.01]);
        translate([-25, 140, 0]) cube([60.01, 1.01, 1.01]);
        translate([167, 140, 0]) cube([241.01, 1.01, 1.01]);
        translate([423, 140, 0]) cube([14.01, 1.01, 1.01]);
        translate([-437, 139, 0]) cube([16.01, 1.01, 1.01]);
        translate([-407, 139, 0]) cube([243.01, 1.01, 1.01]);
        translate([-26, 139, 0]) cube([61.01, 1.01, 1.01]);
        translate([164, 139, 0]) cube([243.01, 1.01, 1.01]);
        translate([422, 139, 0]) cube([15.01, 1.01, 1.01]);
        translate([-436, 138, 0]) cube([15.01, 1.01, 1.01]);
        translate([-406, 138, 0]) cube([244.01, 1.01, 1.01]);
        translate([-29, 138, 0]) cube([63.01, 1.01, 1.01]);
        translate([162, 138, 0]) cube([244.01, 1.01, 1.01]);
        translate([420, 138, 0]) cube([16.01, 1.01, 1.01]);
        translate([-435, 137, 0]) cube([16.01, 1.01, 1.01]);
        translate([-405, 137, 0]) cube([245.01, 1.01, 1.01]);
        translate([-57, 137, 0]) cube([3.01, 1.01, 1.01]);
        translate([-32, 137, 0]) cube([65.01, 1.01, 1.01]);
        translate([159, 137, 0]) cube([245.01, 1.01, 1.01]);
        translate([420, 137, 0]) cube([15.01, 1.01, 1.01]);
        translate([-435, 136, 0]) cube([17.01, 1.01, 1.01]);
        translate([-403, 136, 0]) cube([245.01, 1.01, 1.01]);
        translate([-58, 136, 0]) cube([5.01, 1.01, 1.01]);
        translate([-34, 136, 0]) cube([66.01, 1.01, 1.01]);
        translate([158, 136, 0]) cube([245.01, 1.01, 1.01]);
        translate([418, 136, 0]) cube([17.01, 1.01, 1.01]);
        translate([-434, 135, 0]) cube([17.01, 1.01, 1.01]);
        translate([-402, 135, 0]) cube([247.01, 1.01, 1.01]);
        translate([-57, 135, 0]) cube([88.01, 1.01, 1.01]);
        translate([155, 135, 0]) cube([247.01, 1.01, 1.01]);
        translate([417, 135, 0]) cube([17.01, 1.01, 1.01]);
        translate([-433, 134, 0]) cube([17.01, 1.01, 1.01]);
        translate([-400, 134, 0]) cube([247.01, 1.01, 1.01]);
        translate([-56, 134, 0]) cube([87.01, 1.01, 1.01]);
        translate([153, 134, 0]) cube([247.01, 1.01, 1.01]);
        translate([416, 134, 0]) cube([17.01, 1.01, 1.01]);
        translate([-432, 133, 0]) cube([17.01, 1.01, 1.01]);
        translate([-399, 133, 0]) cube([249.01, 1.01, 1.01]);
        translate([-54, 133, 0]) cube([45.01, 1.01, 1.01]);
        translate([-8, 133, 0]) cube([38.01, 1.01, 1.01]);
        translate([150, 133, 0]) cube([249.01, 1.01, 1.01]);
        translate([415, 133, 0]) cube([18.01, 1.01, 1.01]);
        translate([-432, 132, 0]) cube([18.01, 1.01, 1.01]);
        translate([-398, 132, 0]) cube([250.01, 1.01, 1.01]);
        translate([-53, 132, 0]) cube([42.01, 1.01, 1.01]);
        translate([-9, 132, 0]) cube([38.01, 1.01, 1.01]);
        translate([148, 132, 0]) cube([249.01, 1.01, 1.01]);
        translate([414, 132, 0]) cube([18.01, 1.01, 1.01]);
        translate([-431, 131, 0]) cube([18.01, 1.01, 1.01]);
        translate([-396, 131, 0]) cube([251.01, 1.01, 1.01]);
        translate([-51, 131, 0]) cube([37.01, 1.01, 1.01]);
        translate([-10, 131, 0]) cube([39.01, 1.01, 1.01]);
        translate([144, 131, 0]) cube([252.01, 1.01, 1.01]);
        translate([413, 131, 0]) cube([18.01, 1.01, 1.01]);
        translate([-431, 130, 0]) cube([19.01, 1.01, 1.01]);
        translate([-395, 130, 0]) cube([253.01, 1.01, 1.01]);
        translate([-47, 130, 0]) cube([31.01, 1.01, 1.01]);
        translate([-11, 130, 0]) cube([39.01, 1.01, 1.01]);
        translate([142, 130, 0]) cube([253.01, 1.01, 1.01]);
        translate([411, 130, 0]) cube([20.01, 1.01, 1.01]);
        translate([-430, 129, 0]) cube([20.01, 1.01, 1.01]);
        translate([-393, 129, 0]) cube([254.01, 1.01, 1.01]);
        translate([-42, 129, 0]) cube([20.01, 1.01, 1.01]);
        translate([-12, 129, 0]) cube([39.01, 1.01, 1.01]);
        translate([138, 129, 0]) cube([255.01, 1.01, 1.01]);
        translate([410, 129, 0]) cube([19.01, 1.01, 1.01]);
        translate([-429, 128, 0]) cube([20.01, 1.01, 1.01]);
        translate([-392, 128, 0]) cube([257.01, 1.01, 1.01]);
        translate([-37, 128, 0]) cube([9.01, 1.01, 1.01]);
        translate([-14, 128, 0]) cube([40.01, 1.01, 1.01]);
        translate([135, 128, 0]) cube([256.01, 1.01, 1.01]);
        translate([409, 128, 0]) cube([20.01, 1.01, 1.01]);
        translate([-428, 127, 0]) cube([20.01, 1.01, 1.01]);
        translate([-389, 127, 0]) cube([256.01, 1.01, 1.01]);
        translate([-15, 127, 0]) cube([40.01, 1.01, 1.01]);
        translate([132, 127, 0]) cube([257.01, 1.01, 1.01]);
        translate([408, 127, 0]) cube([20.01, 1.01, 1.01]);
        translate([-427, 126, 0]) cube([20.01, 1.01, 1.01]);
        translate([-388, 126, 0]) cube([259.01, 1.01, 1.01]);
        translate([-18, 126, 0]) cube([42.01, 1.01, 1.01]);
        translate([129, 126, 0]) cube([259.01, 1.01, 1.01]);
        translate([407, 126, 0]) cube([20.01, 1.01, 1.01]);
        translate([-426, 125, 0]) cube([21.01, 1.01, 1.01]);
        translate([-386, 125, 0]) cube([260.01, 1.01, 1.01]);
        translate([-19, 125, 0]) cube([42.01, 1.01, 1.01]);
        translate([126, 125, 0]) cube([260.01, 1.01, 1.01]);
        translate([405, 125, 0]) cube([21.01, 1.01, 1.01]);
        translate([-426, 124, 0]) cube([22.01, 1.01, 1.01]);
        translate([-385, 124, 0]) cube([263.01, 1.01, 1.01]);
        translate([-22, 124, 0]) cube([44.01, 1.01, 1.01]);
        translate([122, 124, 0]) cube([263.01, 1.01, 1.01]);
        translate([404, 124, 0]) cube([22.01, 1.01, 1.01]);
        translate([-425, 123, 0]) cube([22.01, 1.01, 1.01]);
        translate([-383, 123, 0]) cube([264.01, 1.01, 1.01]);
        translate([-24, 123, 0]) cube([29.01, 1.01, 1.01]);
        translate([7, 123, 0]) cube([14.01, 1.01, 1.01]);
        translate([119, 123, 0]) cube([263.01, 1.01, 1.01]);
        translate([403, 123, 0]) cube([22.01, 1.01, 1.01]);
        translate([-424, 122, 0]) cube([23.01, 1.01, 1.01]);
        translate([-381, 122, 0]) cube([267.01, 1.01, 1.01]);
        translate([-39, 122, 0]) cube([43.01, 1.01, 1.01]);
        translate([6, 122, 0]) cube([14.01, 1.01, 1.01]);
        translate([114, 122, 0]) cube([266.01, 1.01, 1.01]);
        translate([401, 122, 0]) cube([23.01, 1.01, 1.01]);
        translate([-423, 121, 0]) cube([23.01, 1.01, 1.01]);
        translate([-379, 121, 0]) cube([267.01, 1.01, 1.01]);
        translate([-39, 121, 0]) cube([41.01, 1.01, 1.01]);
        translate([5, 121, 0]) cube([14.01, 1.01, 1.01]);
        translate([111, 121, 0]) cube([267.01, 1.01, 1.01]);
        translate([400, 121, 0]) cube([23.01, 1.01, 1.01]);
        translate([-422, 120, 0]) cube([24.01, 1.01, 1.01]);
        translate([-377, 120, 0]) cube([270.01, 1.01, 1.01]);
        translate([-37, 120, 0]) cube([38.01, 1.01, 1.01]);
        translate([5, 120, 0]) cube([13.01, 1.01, 1.01]);
        translate([107, 120, 0]) cube([269.01, 1.01, 1.01]);
        translate([398, 120, 0]) cube([24.01, 1.01, 1.01]);
        translate([-421, 119, 0]) cube([25.01, 1.01, 1.01]);
        translate([-374, 119, 0]) cube([270.01, 1.01, 1.01]);
        translate([-36, 119, 0]) cube([36.01, 1.01, 1.01]);
        translate([4, 119, 0]) cube([13.01, 1.01, 1.01]);
        translate([104, 119, 0]) cube([270.01, 1.01, 1.01]);
        translate([396, 119, 0]) cube([25.01, 1.01, 1.01]);
        translate([-420, 118, 0]) cube([26.01, 1.01, 1.01]);
        translate([-372, 118, 0]) cube([272.01, 1.01, 1.01]);
        translate([-34, 118, 0]) cube([32.01, 1.01, 1.01]);
        translate([3, 118, 0]) cube([12.01, 1.01, 1.01]);
        translate([100, 118, 0]) cube([271.01, 1.01, 1.01]);
        translate([395, 118, 0]) cube([25.01, 1.01, 1.01]);
        translate([-420, 117, 0]) cube([28.01, 1.01, 1.01]);
        translate([-370, 117, 0]) cube([275.01, 1.01, 1.01]);
        translate([-33, 117, 0]) cube([29.01, 1.01, 1.01]);
        translate([2, 117, 0]) cube([12.01, 1.01, 1.01]);
        translate([95, 117, 0]) cube([275.01, 1.01, 1.01]);
        translate([393, 117, 0]) cube([26.01, 1.01, 1.01]);
        translate([-418, 116, 0]) cube([27.01, 1.01, 1.01]);
        translate([-366, 116, 0]) cube([273.01, 1.01, 1.01]);
        translate([-30, 116, 0]) cube([23.01, 1.01, 1.01]);
        translate([0, 116, 0]) cube([12.01, 1.01, 1.01]);
        translate([93, 116, 0]) cube([273.01, 1.01, 1.01]);
        translate([391, 116, 0]) cube([27.01, 1.01, 1.01]);
        translate([-417, 115, 0]) cube([29.01, 1.01, 1.01]);
        translate([-364, 115, 0]) cube([274.01, 1.01, 1.01]);
        translate([-27, 115, 0]) cube([18.01, 1.01, 1.01]);
        translate([-1, 115, 0]) cube([12.01, 1.01, 1.01]);
        translate([89, 115, 0]) cube([275.01, 1.01, 1.01]);
        translate([388, 115, 0]) cube([29.01, 1.01, 1.01]);
        translate([-416, 114, 0]) cube([30.01, 1.01, 1.01]);
        translate([-360, 114, 0]) cube([272.01, 1.01, 1.01]);
        translate([-22, 114, 0]) cube([7.01, 1.01, 1.01]);
        translate([-2, 114, 0]) cube([10.01, 1.01, 1.01]);
        translate([87, 114, 0]) cube([273.01, 1.01, 1.01]);
        translate([386, 114, 0]) cube([30.01, 1.01, 1.01]);
        translate([-415, 113, 0]) cube([31.01, 1.01, 1.01]);
        translate([-357, 113, 0]) cube([273.01, 1.01, 1.01]);
        translate([-4, 113, 0]) cube([10.01, 1.01, 1.01]);
        translate([84, 113, 0]) cube([272.01, 1.01, 1.01]);
        translate([383, 113, 0]) cube([32.01, 1.01, 1.01]);
        translate([-415, 112, 0]) cube([33.01, 1.01, 1.01]);
        translate([-353, 112, 0]) cube([271.01, 1.01, 1.01]);
        translate([-4, 112, 0]) cube([7.01, 1.01, 1.01]);
        translate([82, 112, 0]) cube([270.01, 1.01, 1.01]);
        translate([382, 112, 0]) cube([32.01, 1.01, 1.01]);
        translate([-413, 111, 0]) cube([35.01, 1.01, 1.01]);
        translate([-347, 111, 0]) cube([267.01, 1.01, 1.01]);
        translate([-3, 111, 0]) cube([2.01, 1.01, 1.01]);
        translate([80, 111, 0]) cube([267.01, 1.01, 1.01]);
        translate([378, 111, 0]) cube([35.01, 1.01, 1.01]);
        translate([-413, 110, 0]) cube([37.01, 1.01, 1.01]);
        translate([-343, 110, 0]) cube([264.01, 1.01, 1.01]);
        translate([79, 110, 0]) cube([263.01, 1.01, 1.01]);
        translate([375, 110, 0]) cube([37.01, 1.01, 1.01]);
        translate([-411, 109, 0]) cube([38.01, 1.01, 1.01]);
        translate([-333, 109, 0]) cube([256.01, 1.01, 1.01]);
        translate([77, 109, 0]) cube([257.01, 1.01, 1.01]);
        translate([372, 109, 0]) cube([39.01, 1.01, 1.01]);
        translate([-411, 108, 0]) cube([42.01, 1.01, 1.01]);
        translate([-325, 108, 0]) cube([2.01, 1.01, 1.01]);
        translate([-321, 108, 0]) cube([245.01, 1.01, 1.01]);
        translate([75, 108, 0]) cube([248.01, 1.01, 1.01]);
        translate([326, 108, 0]) cube([1.01, 1.01, 1.01]);
        translate([370, 108, 0]) cube([40.01, 1.01, 1.01]);
        translate([-409, 107, 0]) cube([43.01, 1.01, 1.01]);
        translate([-301, 107, 0]) cube([227.01, 1.01, 1.01]);
        translate([74, 107, 0]) cube([227.01, 1.01, 1.01]);
        translate([366, 107, 0]) cube([43.01, 1.01, 1.01]);
        translate([-408, 106, 0]) cube([46.01, 1.01, 1.01]);
        translate([-304, 106, 0]) cube([231.01, 1.01, 1.01]);
        translate([72, 106, 0]) cube([232.01, 1.01, 1.01]);
        translate([360, 106, 0]) cube([48.01, 1.01, 1.01]);
        translate([-407, 105, 0]) cube([49.01, 1.01, 1.01]);
        translate([-306, 105, 0]) cube([234.01, 1.01, 1.01]);
        translate([71, 105, 0]) cube([235.01, 1.01, 1.01]);
        translate([358, 105, 0]) cube([49.01, 1.01, 1.01]);
        translate([-406, 104, 0]) cube([54.01, 1.01, 1.01]);
        translate([-311, 104, 0]) cube([241.01, 1.01, 1.01]);
        translate([70, 104, 0]) cube([240.01, 1.01, 1.01]);
        translate([352, 104, 0]) cube([54.01, 1.01, 1.01]);
        translate([-405, 103, 0]) cube([57.01, 1.01, 1.01]);
        translate([-314, 103, 0]) cube([245.01, 1.01, 1.01]);
        translate([69, 103, 0]) cube([245.01, 1.01, 1.01]);
        translate([347, 103, 0]) cube([57.01, 1.01, 1.01]);
        translate([-404, 102, 0]) cube([76.01, 1.01, 1.01]);
        translate([-326, 102, 0]) cube([258.01, 1.01, 1.01]);
        translate([68, 102, 0]) cube([260.01, 1.01, 1.01]);
        translate([334, 102, 0]) cube([70.01, 1.01, 1.01]);
        translate([-402, 101, 0]) cube([335.01, 1.01, 1.01]);
        translate([67, 101, 0]) cube([335.01, 1.01, 1.01]);
        translate([-401, 100, 0]) cube([335.01, 1.01, 1.01]);
        translate([66, 100, 0]) cube([334.01, 1.01, 1.01]);
        translate([-400, 99, 0]) cube([334.01, 1.01, 1.01]);
        translate([65, 99, 0]) cube([335.01, 1.01, 1.01]);
        translate([-399, 98, 0]) cube([334.01, 1.01, 1.01]);
        translate([65, 98, 0]) cube([334.01, 1.01, 1.01]);
        translate([-398, 97, 0]) cube([334.01, 1.01, 1.01]);
        translate([64, 97, 0]) cube([334.01, 1.01, 1.01]);
        translate([-396, 96, 0]) cube([332.01, 1.01, 1.01]);
        translate([63, 96, 0]) cube([333.01, 1.01, 1.01]);
        translate([-395, 95, 0]) cube([332.01, 1.01, 1.01]);
        translate([63, 95, 0]) cube([332.01, 1.01, 1.01]);
        translate([-394, 94, 0]) cube([331.01, 1.01, 1.01]);
        translate([62, 94, 0]) cube([331.01, 1.01, 1.01]);
        translate([-392, 93, 0]) cube([330.01, 1.01, 1.01]);
        translate([62, 93, 0]) cube([330.01, 1.01, 1.01]);
        translate([-391, 92, 0]) cube([329.01, 1.01, 1.01]);
        translate([61, 92, 0]) cube([330.01, 1.01, 1.01]);
        translate([-390, 91, 0]) cube([329.01, 1.01, 1.01]);
        translate([61, 91, 0]) cube([328.01, 1.01, 1.01]);
        translate([-388, 90, 0]) cube([327.01, 1.01, 1.01]);
        translate([61, 90, 0]) cube([327.01, 1.01, 1.01]);
        translate([-386, 89, 0]) cube([326.01, 1.01, 1.01]);
        translate([60, 89, 0]) cube([326.01, 1.01, 1.01]);
        translate([-397, 88, 0]) cube([2.01, 1.01, 1.01]);
        translate([-386, 88, 0]) cube([326.01, 1.01, 1.01]);
        translate([60, 88, 0]) cube([325.01, 1.01, 1.01]);
        translate([394, 88, 0]) cube([3.01, 1.01, 1.01]);
        translate([-397, 87, 0]) cube([3.01, 1.01, 1.01]);
        translate([-384, 87, 0]) cube([324.01, 1.01, 1.01]);
        translate([59, 87, 0]) cube([324.01, 1.01, 1.01]);
        translate([393, 87, 0]) cube([4.01, 1.01, 1.01]);
        translate([-397, 86, 0]) cube([5.01, 1.01, 1.01]);
        translate([-383, 86, 0]) cube([323.01, 1.01, 1.01]);
        translate([59, 86, 0]) cube([323.01, 1.01, 1.01]);
        translate([392, 86, 0]) cube([5.01, 1.01, 1.01]);
        translate([-397, 85, 0]) cube([6.01, 1.01, 1.01]);
        translate([-380, 85, 0]) cube([320.01, 1.01, 1.01]);
        translate([59, 85, 0]) cube([321.01, 1.01, 1.01]);
        translate([391, 85, 0]) cube([6.01, 1.01, 1.01]);
        translate([-396, 84, 0]) cube([6.01, 1.01, 1.01]);
        translate([-379, 84, 0]) cube([319.01, 1.01, 1.01]);
        translate([59, 84, 0]) cube([320.01, 1.01, 1.01]);
        translate([390, 84, 0]) cube([6.01, 1.01, 1.01]);
        translate([-396, 83, 0]) cube([7.01, 1.01, 1.01]);
        translate([-378, 83, 0]) cube([319.01, 1.01, 1.01]);
        translate([59, 83, 0]) cube([318.01, 1.01, 1.01]);
        translate([389, 83, 0]) cube([6.01, 1.01, 1.01]);
        translate([-395, 82, 0]) cube([7.01, 1.01, 1.01]);
        translate([-376, 82, 0]) cube([317.01, 1.01, 1.01]);
        translate([59, 82, 0]) cube([316.01, 1.01, 1.01]);
        translate([387, 82, 0]) cube([8.01, 1.01, 1.01]);
        translate([-395, 81, 0]) cube([9.01, 1.01, 1.01]);
        translate([-374, 81, 0]) cube([315.01, 1.01, 1.01]);
        translate([59, 81, 0]) cube([315.01, 1.01, 1.01]);
        translate([386, 81, 0]) cube([9.01, 1.01, 1.01]);
        translate([-394, 80, 0]) cube([9.01, 1.01, 1.01]);
        translate([-372, 80, 0]) cube([313.01, 1.01, 1.01]);
        translate([59, 80, 0]) cube([313.01, 1.01, 1.01]);
        translate([385, 80, 0]) cube([9.01, 1.01, 1.01]);
        translate([-394, 79, 0]) cube([10.01, 1.01, 1.01]);
        translate([-371, 79, 0]) cube([312.01, 1.01, 1.01]);
        translate([59, 79, 0]) cube([312.01, 1.01, 1.01]);
        translate([383, 79, 0]) cube([11.01, 1.01, 1.01]);
        translate([-393, 78, 0]) cube([11.01, 1.01, 1.01]);
        translate([-369, 78, 0]) cube([310.01, 1.01, 1.01]);
        translate([59, 78, 0]) cube([309.01, 1.01, 1.01]);
        translate([382, 78, 0]) cube([11.01, 1.01, 1.01]);
        translate([-392, 77, 0]) cube([11.01, 1.01, 1.01]);
        translate([-367, 77, 0]) cube([308.01, 1.01, 1.01]);
        translate([59, 77, 0]) cube([308.01, 1.01, 1.01]);
        translate([380, 77, 0]) cube([12.01, 1.01, 1.01]);
        translate([-391, 76, 0]) cube([11.01, 1.01, 1.01]);
        translate([-365, 76, 0]) cube([306.01, 1.01, 1.01]);
        translate([59, 76, 0]) cube([305.01, 1.01, 1.01]);
        translate([379, 76, 0]) cube([12.01, 1.01, 1.01]);
        translate([-390, 75, 0]) cube([12.01, 1.01, 1.01]);
        translate([-363, 75, 0]) cube([304.01, 1.01, 1.01]);
        translate([59, 75, 0]) cube([304.01, 1.01, 1.01]);
        translate([378, 75, 0]) cube([12.01, 1.01, 1.01]);
        translate([-389, 74, 0]) cube([12.01, 1.01, 1.01]);
        translate([-360, 74, 0]) cube([301.01, 1.01, 1.01]);
        translate([59, 74, 0]) cube([301.01, 1.01, 1.01]);
        translate([376, 74, 0]) cube([13.01, 1.01, 1.01]);
        translate([-388, 73, 0]) cube([13.01, 1.01, 1.01]);
        translate([-358, 73, 0]) cube([299.01, 1.01, 1.01]);
        translate([59, 73, 0]) cube([299.01, 1.01, 1.01]);
        translate([375, 73, 0]) cube([13.01, 1.01, 1.01]);
        translate([-387, 72, 0]) cube([13.01, 1.01, 1.01]);
        translate([-356, 72, 0]) cube([297.01, 1.01, 1.01]);
        translate([59, 72, 0]) cube([298.01, 1.01, 1.01]);
        translate([374, 72, 0]) cube([12.01, 1.01, 1.01]);
        translate([-386, 71, 0]) cube([15.01, 1.01, 1.01]);
        translate([-353, 71, 0]) cube([293.01, 1.01, 1.01]);
        translate([59, 71, 0]) cube([295.01, 1.01, 1.01]);
        translate([372, 71, 0]) cube([14.01, 1.01, 1.01]);
        translate([-385, 70, 0]) cube([15.01, 1.01, 1.01]);
        translate([-351, 70, 0]) cube([291.01, 1.01, 1.01]);
        translate([60, 70, 0]) cube([291.01, 1.01, 1.01]);
        translate([370, 70, 0]) cube([14.01, 1.01, 1.01]);
        translate([-384, 69, 0]) cube([16.01, 1.01, 1.01]);
        translate([-347, 69, 0]) cube([287.01, 1.01, 1.01]);
        translate([60, 69, 0]) cube([287.01, 1.01, 1.01]);
        translate([368, 69, 0]) cube([15.01, 1.01, 1.01]);
        translate([-383, 68, 0]) cube([17.01, 1.01, 1.01]);
        translate([-345, 68, 0]) cube([285.01, 1.01, 1.01]);
        translate([60, 68, 0]) cube([217.01, 1.01, 1.01]);
        translate([281, 68, 0]) cube([64.01, 1.01, 1.01]);
        translate([367, 68, 0]) cube([15.01, 1.01, 1.01]);
        translate([-381, 67, 0]) cube([16.01, 1.01, 1.01]);
        translate([-341, 67, 0]) cube([50.01, 1.01, 1.01]);
        translate([-277, 67, 0]) cube([216.01, 1.01, 1.01]);
        translate([60, 67, 0]) cube([217.01, 1.01, 1.01]);
        translate([292, 67, 0]) cube([49.01, 1.01, 1.01]);
        translate([365, 67, 0]) cube([16.01, 1.01, 1.01]);
        translate([-381, 66, 0]) cube([19.01, 1.01, 1.01]);
        translate([-338, 66, 0]) cube([1.01, 1.01, 1.01]);
        translate([-336, 66, 0]) cube([35.01, 1.01, 1.01]);
        translate([-281, 66, 0]) cube([220.01, 1.01, 1.01]);
        translate([61, 66, 0]) cube([219.01, 1.01, 1.01]);
        translate([301, 66, 0]) cube([36.01, 1.01, 1.01]);
        translate([363, 66, 0]) cube([17.01, 1.01, 1.01]);
        translate([-379, 65, 0]) cube([18.01, 1.01, 1.01]);
        translate([-283, 65, 0]) cube([222.01, 1.01, 1.01]);
        translate([61, 65, 0]) cube([222.01, 1.01, 1.01]);
        translate([361, 65, 0]) cube([18.01, 1.01, 1.01]);
        translate([-378, 64, 0]) cube([20.01, 1.01, 1.01]);
        translate([-286, 64, 0]) cube([225.01, 1.01, 1.01]);
        translate([61, 64, 0]) cube([225.01, 1.01, 1.01]);
        translate([358, 64, 0]) cube([20.01, 1.01, 1.01]);
        translate([-377, 63, 0]) cube([21.01, 1.01, 1.01]);
        translate([-288, 63, 0]) cube([226.01, 1.01, 1.01]);
        translate([62, 63, 0]) cube([226.01, 1.01, 1.01]);
        translate([356, 63, 0]) cube([21.01, 1.01, 1.01]);
        translate([-376, 62, 0]) cube([22.01, 1.01, 1.01]);
        translate([-293, 62, 0]) cube([231.01, 1.01, 1.01]);
        translate([62, 62, 0]) cube([231.01, 1.01, 1.01]);
        translate([353, 62, 0]) cube([23.01, 1.01, 1.01]);
        translate([-375, 61, 0]) cube([24.01, 1.01, 1.01]);
        translate([-296, 61, 0]) cube([234.01, 1.01, 1.01]);
        translate([62, 61, 0]) cube([233.01, 1.01, 1.01]);
        translate([351, 61, 0]) cube([24.01, 1.01, 1.01]);
        translate([-374, 60, 0]) cube([27.01, 1.01, 1.01]);
        translate([-299, 60, 0]) cube([236.01, 1.01, 1.01]);
        translate([63, 60, 0]) cube([236.01, 1.01, 1.01]);
        translate([347, 60, 0]) cube([27.01, 1.01, 1.01]);
        translate([-373, 59, 0]) cube([29.01, 1.01, 1.01]);
        translate([-303, 59, 0]) cube([240.01, 1.01, 1.01]);
        translate([63, 59, 0]) cube([239.01, 1.01, 1.01]);
        translate([343, 59, 0]) cube([30.01, 1.01, 1.01]);
        translate([-372, 58, 0]) cube([32.01, 1.01, 1.01]);
        translate([-308, 58, 0]) cube([245.01, 1.01, 1.01]);
        translate([63, 58, 0]) cube([245.01, 1.01, 1.01]);
        translate([339, 58, 0]) cube([32.01, 1.01, 1.01]);
        translate([-371, 57, 0]) cube([38.01, 1.01, 1.01]);
        translate([-313, 57, 0]) cube([249.01, 1.01, 1.01]);
        translate([64, 57, 0]) cube([250.01, 1.01, 1.01]);
        translate([331, 57, 0]) cube([40.01, 1.01, 1.01]);
        translate([-369, 56, 0]) cube([304.01, 1.01, 1.01]);
        translate([64, 56, 0]) cube([305.01, 1.01, 1.01]);
        translate([-369, 55, 0]) cube([304.01, 1.01, 1.01]);
        translate([65, 55, 0]) cube([303.01, 1.01, 1.01]);
        translate([-367, 54, 0]) cube([302.01, 1.01, 1.01]);
        translate([65, 54, 0]) cube([302.01, 1.01, 1.01]);
        translate([-366, 53, 0]) cube([300.01, 1.01, 1.01]);
        translate([65, 53, 0]) cube([301.01, 1.01, 1.01]);
        translate([-364, 52, 0]) cube([297.01, 1.01, 1.01]);
        translate([66, 52, 0]) cube([298.01, 1.01, 1.01]);
        translate([-364, 51, 0]) cube([297.01, 1.01, 1.01]);
        translate([67, 51, 0]) cube([296.01, 1.01, 1.01]);
        translate([-362, 50, 0]) cube([295.01, 1.01, 1.01]);
        translate([67, 50, 0]) cube([295.01, 1.01, 1.01]);
        translate([-361, 49, 0]) cube([293.01, 1.01, 1.01]);
        translate([68, 49, 0]) cube([292.01, 1.01, 1.01]);
        translate([-359, 48, 0]) cube([290.01, 1.01, 1.01]);
        translate([69, 48, 0]) cube([290.01, 1.01, 1.01]);
        translate([-358, 47, 0]) cube([289.01, 1.01, 1.01]);
        translate([69, 47, 0]) cube([289.01, 1.01, 1.01]);
        translate([-357, 46, 0]) cube([287.01, 1.01, 1.01]);
        translate([70, 46, 0]) cube([287.01, 1.01, 1.01]);
        translate([-355, 45, 0]) cube([284.01, 1.01, 1.01]);
        translate([70, 45, 0]) cube([285.01, 1.01, 1.01]);
        translate([-354, 44, 0]) cube([283.01, 1.01, 1.01]);
        translate([71, 44, 0]) cube([283.01, 1.01, 1.01]);
        translate([-353, 43, 0]) cube([281.01, 1.01, 1.01]);
        translate([72, 43, 0]) cube([281.01, 1.01, 1.01]);
        translate([-351, 42, 0]) cube([279.01, 1.01, 1.01]);
        translate([72, 42, 0]) cube([279.01, 1.01, 1.01]);
        translate([-350, 41, 0]) cube([277.01, 1.01, 1.01]);
        translate([73, 41, 0]) cube([277.01, 1.01, 1.01]);
        translate([-348, 40, 0]) cube([274.01, 1.01, 1.01]);
        translate([74, 40, 0]) cube([274.01, 1.01, 1.01]);
        translate([-346, 39, 0]) cube([271.01, 1.01, 1.01]);
        translate([74, 39, 0]) cube([272.01, 1.01, 1.01]);
        translate([-344, 38, 0]) cube([268.01, 1.01, 1.01]);
        translate([75, 38, 0]) cube([269.01, 1.01, 1.01]);
        translate([-343, 37, 0]) cube([267.01, 1.01, 1.01]);
        translate([76, 37, 0]) cube([267.01, 1.01, 1.01]);
        translate([-341, 36, 0]) cube([264.01, 1.01, 1.01]);
        translate([77, 36, 0]) cube([264.01, 1.01, 1.01]);
        translate([-340, 35, 0]) cube([262.01, 1.01, 1.01]);
        translate([78, 35, 0]) cube([262.01, 1.01, 1.01]);
        translate([-355, 34, 0]) cube([2.01, 1.01, 1.01]);
        translate([-338, 34, 0]) cube([259.01, 1.01, 1.01]);
        translate([79, 34, 0]) cube([259.01, 1.01, 1.01]);
        translate([353, 34, 0]) cube([3.01, 1.01, 1.01]);
        translate([-355, 33, 0]) cube([4.01, 1.01, 1.01]);
        translate([-336, 33, 0]) cube([256.01, 1.01, 1.01]);
        translate([79, 33, 0]) cube([257.01, 1.01, 1.01]);
        translate([351, 33, 0]) cube([4.01, 1.01, 1.01]);
        translate([-355, 32, 0]) cube([5.01, 1.01, 1.01]);
        translate([-334, 32, 0]) cube([254.01, 1.01, 1.01]);
        translate([80, 32, 0]) cube([254.01, 1.01, 1.01]);
        translate([350, 32, 0]) cube([5.01, 1.01, 1.01]);
        translate([-354, 31, 0]) cube([6.01, 1.01, 1.01]);
        translate([-332, 31, 0]) cube([251.01, 1.01, 1.01]);
        translate([81, 31, 0]) cube([250.01, 1.01, 1.01]);
        translate([349, 31, 0]) cube([5.01, 1.01, 1.01]);
        translate([-353, 30, 0]) cube([6.01, 1.01, 1.01]);
        translate([-330, 30, 0]) cube([248.01, 1.01, 1.01]);
        translate([82, 30, 0]) cube([248.01, 1.01, 1.01]);
        translate([347, 30, 0]) cube([6.01, 1.01, 1.01]);
        translate([-353, 29, 0]) cube([8.01, 1.01, 1.01]);
        translate([-327, 29, 0]) cube([244.01, 1.01, 1.01]);
        translate([83, 29, 0]) cube([244.01, 1.01, 1.01]);
        translate([345, 29, 0]) cube([8.01, 1.01, 1.01]);
        translate([-352, 28, 0]) cube([9.01, 1.01, 1.01]);
        translate([-325, 28, 0]) cube([241.01, 1.01, 1.01]);
        translate([83, 28, 0]) cube([242.01, 1.01, 1.01]);
        translate([343, 28, 0]) cube([9.01, 1.01, 1.01]);
        translate([-351, 27, 0]) cube([9.01, 1.01, 1.01]);
        translate([-321, 27, 0]) cube([236.01, 1.01, 1.01]);
        translate([85, 27, 0]) cube([236.01, 1.01, 1.01]);
        translate([342, 27, 0]) cube([9.01, 1.01, 1.01]);
        translate([-350, 26, 0]) cube([10.01, 1.01, 1.01]);
        translate([-320, 26, 0]) cube([235.01, 1.01, 1.01]);
        translate([85, 26, 0]) cube([235.01, 1.01, 1.01]);
        translate([340, 26, 0]) cube([10.01, 1.01, 1.01]);
        translate([-350, 25, 0]) cube([12.01, 1.01, 1.01]);
        translate([-316, 25, 0]) cube([230.01, 1.01, 1.01]);
        translate([86, 25, 0]) cube([230.01, 1.01, 1.01]);
        translate([338, 25, 0]) cube([11.01, 1.01, 1.01]);
        translate([-349, 24, 0]) cube([13.01, 1.01, 1.01]);
        translate([-314, 24, 0]) cube([227.01, 1.01, 1.01]);
        translate([87, 24, 0]) cube([226.01, 1.01, 1.01]);
        translate([336, 24, 0]) cube([13.01, 1.01, 1.01]);
        translate([-348, 23, 0]) cube([13.01, 1.01, 1.01]);
        translate([-310, 23, 0]) cube([222.01, 1.01, 1.01]);
        translate([87, 23, 0]) cube([223.01, 1.01, 1.01]);
        translate([334, 23, 0]) cube([14.01, 1.01, 1.01]);
        translate([-347, 22, 0]) cube([15.01, 1.01, 1.01]);
        translate([-306, 22, 0]) cube([218.01, 1.01, 1.01]);
        translate([88, 22, 0]) cube([218.01, 1.01, 1.01]);
        translate([332, 22, 0]) cube([15.01, 1.01, 1.01]);
        translate([-346, 21, 0]) cube([16.01, 1.01, 1.01]);
        translate([-302, 21, 0]) cube([213.01, 1.01, 1.01]);
        translate([89, 21, 0]) cube([213.01, 1.01, 1.01]);
        translate([330, 21, 0]) cube([16.01, 1.01, 1.01]);
        translate([-345, 20, 0]) cube([18.01, 1.01, 1.01]);
        translate([-295, 20, 0]) cube([205.01, 1.01, 1.01]);
        translate([89, 20, 0]) cube([205.01, 1.01, 1.01]);
        translate([327, 20, 0]) cube([17.01, 1.01, 1.01]);
        translate([-344, 19, 0]) cube([18.01, 1.01, 1.01]);
        translate([-290, 19, 0]) cube([31.01, 1.01, 1.01]);
        translate([-255, 19, 0]) cube([164.01, 1.01, 1.01]);
        translate([90, 19, 0]) cube([165.01, 1.01, 1.01]);
        translate([259, 19, 0]) cube([31.01, 1.01, 1.01]);
        translate([325, 19, 0]) cube([18.01, 1.01, 1.01]);
        translate([-343, 18, 0]) cube([20.01, 1.01, 1.01]);
        translate([-255, 18, 0]) cube([164.01, 1.01, 1.01]);
        translate([90, 18, 0]) cube([165.01, 1.01, 1.01]);
        translate([323, 18, 0]) cube([19.01, 1.01, 1.01]);
        translate([-342, 17, 0]) cube([22.01, 1.01, 1.01]);
        translate([-256, 17, 0]) cube([164.01, 1.01, 1.01]);
        translate([91, 17, 0]) cube([165.01, 1.01, 1.01]);
        translate([320, 17, 0]) cube([22.01, 1.01, 1.01]);
        translate([-341, 16, 0]) cube([23.01, 1.01, 1.01]);
        translate([-258, 16, 0]) cube([166.01, 1.01, 1.01]);
        translate([92, 16, 0]) cube([166.01, 1.01, 1.01]);
        translate([318, 16, 0]) cube([22.01, 1.01, 1.01]);
        translate([-340, 15, 0]) cube([26.01, 1.01, 1.01]);
        translate([-260, 15, 0]) cube([167.01, 1.01, 1.01]);
        translate([92, 15, 0]) cube([167.01, 1.01, 1.01]);
        translate([314, 15, 0]) cube([26.01, 1.01, 1.01]);
        translate([-339, 14, 0]) cube([27.01, 1.01, 1.01]);
        translate([-261, 14, 0]) cube([168.01, 1.01, 1.01]);
        translate([93, 14, 0]) cube([168.01, 1.01, 1.01]);
        translate([312, 14, 0]) cube([26.01, 1.01, 1.01]);
        translate([-337, 13, 0]) cube([29.01, 1.01, 1.01]);
        translate([-264, 13, 0]) cube([170.01, 1.01, 1.01]);
        translate([93, 13, 0]) cube([171.01, 1.01, 1.01]);
        translate([307, 13, 0]) cube([30.01, 1.01, 1.01]);
        translate([-336, 12, 0]) cube([31.01, 1.01, 1.01]);
        translate([-266, 12, 0]) cube([172.01, 1.01, 1.01]);
        translate([94, 12, 0]) cube([172.01, 1.01, 1.01]);
        translate([303, 12, 0]) cube([32.01, 1.01, 1.01]);
        translate([-334, 11, 0]) cube([36.01, 1.01, 1.01]);
        translate([-271, 11, 0]) cube([176.01, 1.01, 1.01]);
        translate([94, 11, 0]) cube([178.01, 1.01, 1.01]);
        translate([297, 11, 0]) cube([37.01, 1.01, 1.01]);
        translate([-333, 10, 0]) cube([238.01, 1.01, 1.01]);
        translate([95, 10, 0]) cube([238.01, 1.01, 1.01]);
        translate([-332, 9, 0]) cube([236.01, 1.01, 1.01]);
        translate([96, 9, 0]) cube([236.01, 1.01, 1.01]);
        translate([-331, 8, 0]) cube([235.01, 1.01, 1.01]);
        translate([96, 8, 0]) cube([235.01, 1.01, 1.01]);
        translate([-329, 7, 0]) cube([232.01, 1.01, 1.01]);
        translate([97, 7, 0]) cube([232.01, 1.01, 1.01]);
        translate([-328, 6, 0]) cube([231.01, 1.01, 1.01]);
        translate([97, 6, 0]) cube([231.01, 1.01, 1.01]);
        translate([-326, 5, 0]) cube([228.01, 1.01, 1.01]);
        translate([98, 5, 0]) cube([228.01, 1.01, 1.01]);
        translate([-325, 4, 0]) cube([227.01, 1.01, 1.01]);
        translate([98, 4, 0]) cube([227.01, 1.01, 1.01]);
        translate([-324, 3, 0]) cube([226.01, 1.01, 1.01]);
        translate([98, 3, 0]) cube([225.01, 1.01, 1.01]);
        translate([-322, 2, 0]) cube([223.01, 1.01, 1.01]);
        translate([99, 2, 0]) cube([223.01, 1.01, 1.01]);
        translate([-321, 1, 0]) cube([221.01, 1.01, 1.01]);
        translate([99, 1, 0]) cube([221.01, 1.01, 1.01]);
        translate([-319, 0, 0]) cube([219.01, 1.01, 1.01]);
        translate([100, 0, 0]) cube([219.01, 1.01, 1.01]);
        translate([-317, -1, 0]) cube([217.01, 1.01, 1.01]);
        translate([100, -1, 0]) cube([217.01, 1.01, 1.01]);
        translate([-316, -2, 0]) cube([215.01, 1.01, 1.01]);
        translate([100, -2, 0]) cube([215.01, 1.01, 1.01]);
        translate([-314, -3, 0]) cube([213.01, 1.01, 1.01]);
        translate([101, -3, 0]) cube([213.01, 1.01, 1.01]);
        translate([-312, -4, 0]) cube([211.01, 1.01, 1.01]);
        translate([101, -4, 0]) cube([211.01, 1.01, 1.01]);
        translate([-311, -5, 0]) cube([209.01, 1.01, 1.01]);
        translate([102, -5, 0]) cube([209.01, 1.01, 1.01]);
        translate([-309, -6, 0]) cube([207.01, 1.01, 1.01]);
        translate([102, -6, 0]) cube([207.01, 1.01, 1.01]);
        translate([-307, -7, 0]) cube([205.01, 1.01, 1.01]);
        translate([102, -7, 0]) cube([205.01, 1.01, 1.01]);
        translate([-306, -8, 0]) cube([204.01, 1.01, 1.01]);
        translate([102, -8, 0]) cube([204.01, 1.01, 1.01]);
        translate([-304, -9, 0]) cube([201.01, 1.01, 1.01]);
        translate([103, -9, 0]) cube([201.01, 1.01, 1.01]);
        translate([-302, -10, 0]) cube([199.01, 1.01, 1.01]);
        translate([103, -10, 0]) cube([199.01, 1.01, 1.01]);
        translate([-300, -11, 0]) cube([197.01, 1.01, 1.01]);
        translate([103, -11, 0]) cube([197.01, 1.01, 1.01]);
        translate([-299, -12, 0]) cube([195.01, 1.01, 1.01]);
        translate([103, -12, 0]) cube([195.01, 1.01, 1.01]);
        translate([-296, -13, 0]) cube([192.01, 1.01, 1.01]);
        translate([103, -13, 0]) cube([193.01, 1.01, 1.01]);
        translate([-295, -14, 0]) cube([191.01, 1.01, 1.01]);
        translate([103, -14, 0]) cube([191.01, 1.01, 1.01]);
        translate([-292, -15, 0]) cube([188.01, 1.01, 1.01]);
        translate([104, -15, 0]) cube([188.01, 1.01, 1.01]);
        translate([-291, -16, 0]) cube([187.01, 1.01, 1.01]);
        translate([104, -16, 0]) cube([186.01, 1.01, 1.01]);
        translate([-288, -17, 0]) cube([183.01, 1.01, 1.01]);
        translate([105, -17, 0]) cube([182.01, 1.01, 1.01]);
        translate([-286, -18, 0]) cube([181.01, 1.01, 1.01]);
        translate([105, -18, 0]) cube([180.01, 1.01, 1.01]);
        translate([-283, -19, 0]) cube([178.01, 1.01, 1.01]);
        translate([105, -19, 0]) cube([177.01, 1.01, 1.01]);
        translate([-280, -20, 0]) cube([175.01, 1.01, 1.01]);
        translate([105, -20, 0]) cube([174.01, 1.01, 1.01]);
        translate([-278, -21, 0]) cube([173.01, 1.01, 1.01]);
        translate([105, -21, 0]) cube([172.01, 1.01, 1.01]);
        translate([-273, -22, 0]) cube([168.01, 1.01, 1.01]);
        translate([105, -22, 0]) cube([168.01, 1.01, 1.01]);
        translate([-272, -23, 0]) cube([167.01, 1.01, 1.01]);
        translate([105, -23, 0]) cube([165.01, 1.01, 1.01]);
        translate([-262, -24, 0]) cube([157.01, 1.01, 1.01]);
        translate([105, -24, 0]) cube([157.01, 1.01, 1.01]);
        translate([-259, -25, 0]) cube([154.01, 1.01, 1.01]);
        translate([105, -25, 0]) cube([152.01, 1.01, 1.01]);
        translate([-251, -26, 0]) cube([145.01, 1.01, 1.01]);
        translate([105, -26, 0]) cube([145.01, 1.01, 1.01]);
        translate([-247, -27, 0]) cube([141.01, 1.01, 1.01]);
        translate([105, -27, 0]) cube([141.01, 1.01, 1.01]);
        translate([-243, -28, 0]) cube([137.01, 1.01, 1.01]);
        translate([105, -28, 0]) cube([137.01, 1.01, 1.01]);
        translate([-239, -29, 0]) cube([133.01, 1.01, 1.01]);
        translate([105, -29, 0]) cube([134.01, 1.01, 1.01]);
        translate([-237, -30, 0]) cube([131.01, 1.01, 1.01]);
        translate([105, -30, 0]) cube([131.01, 1.01, 1.01]);
        translate([-233, -31, 0]) cube([127.01, 1.01, 1.01]);
        translate([105, -31, 0]) cube([128.01, 1.01, 1.01]);
        translate([-232, -32, 0]) cube([126.01, 1.01, 1.01]);
        translate([105, -32, 0]) cube([127.01, 1.01, 1.01]);
        translate([-229, -33, 0]) cube([123.01, 1.01, 1.01]);
        translate([105, -33, 0]) cube([124.01, 1.01, 1.01]);
        translate([-228, -34, 0]) cube([122.01, 1.01, 1.01]);
        translate([105, -34, 0]) cube([123.01, 1.01, 1.01]);
        translate([-226, -35, 0]) cube([120.01, 1.01, 1.01]);
        translate([105, -35, 0]) cube([121.01, 1.01, 1.01]);
        translate([-225, -36, 0]) cube([119.01, 1.01, 1.01]);
        translate([105, -36, 0]) cube([120.01, 1.01, 1.01]);
        translate([-223, -37, 0]) cube([118.01, 1.01, 1.01]);
        translate([105, -37, 0]) cube([118.01, 1.01, 1.01]);
        translate([-222, -38, 0]) cube([117.01, 1.01, 1.01]);
        translate([105, -38, 0]) cube([117.01, 1.01, 1.01]);
        translate([-220, -39, 0]) cube([115.01, 1.01, 1.01]);
        translate([105, -39, 0]) cube([115.01, 1.01, 1.01]);
        translate([-219, -40, 0]) cube([114.01, 1.01, 1.01]);
        translate([105, -40, 0]) cube([114.01, 1.01, 1.01]);
        translate([-218, -41, 0]) cube([113.01, 1.01, 1.01]);
        translate([105, -41, 0]) cube([113.01, 1.01, 1.01]);
        translate([-216, -42, 0]) cube([111.01, 1.01, 1.01]);
        translate([105, -42, 0]) cube([111.01, 1.01, 1.01]);
        translate([-215, -43, 0]) cube([110.01, 1.01, 1.01]);
        translate([104, -43, 0]) cube([111.01, 1.01, 1.01]);
        translate([-213, -44, 0]) cube([108.01, 1.01, 1.01]);
        translate([104, -44, 0]) cube([109.01, 1.01, 1.01]);
        translate([-213, -45, 0]) cube([109.01, 1.01, 1.01]);
        translate([104, -45, 0]) cube([108.01, 1.01, 1.01]);
        translate([-211, -46, 0]) cube([107.01, 1.01, 1.01]);
        translate([103, -46, 0]) cube([108.01, 1.01, 1.01]);
        translate([-210, -47, 0]) cube([106.01, 1.01, 1.01]);
        translate([103, -47, 0]) cube([107.01, 1.01, 1.01]);
        translate([-209, -48, 0]) cube([106.01, 1.01, 1.01]);
        translate([103, -48, 0]) cube([105.01, 1.01, 1.01]);
        translate([-207, -49, 0]) cube([104.01, 1.01, 1.01]);
        translate([103, -49, 0]) cube([104.01, 1.01, 1.01]);
        translate([-206, -50, 0]) cube([103.01, 1.01, 1.01]);
        translate([102, -50, 0]) cube([104.01, 1.01, 1.01]);
        translate([-204, -51, 0]) cube([102.01, 1.01, 1.01]);
        translate([102, -51, 0]) cube([102.01, 1.01, 1.01]);
        translate([-204, -52, 0]) cube([102.01, 1.01, 1.01]);
        translate([102, -52, 0]) cube([101.01, 1.01, 1.01]);
        translate([-202, -53, 0]) cube([101.01, 1.01, 1.01]);
        translate([101, -53, 0]) cube([101.01, 1.01, 1.01]);
        translate([-201, -54, 0]) cube([100.01, 1.01, 1.01]);
        translate([101, -54, 0]) cube([100.01, 1.01, 1.01]);
        translate([-200, -55, 0]) cube([100.01, 1.01, 1.01]);
        translate([100, -55, 0]) cube([100.01, 1.01, 1.01]);
        translate([-199, -56, 0]) cube([99.01, 1.01, 1.01]);
        translate([100, -56, 0]) cube([98.01, 1.01, 1.01]);
        translate([-198, -57, 0]) cube([99.01, 1.01, 1.01]);
        translate([99, -57, 0]) cube([98.01, 1.01, 1.01]);
        translate([-196, -58, 0]) cube([97.01, 1.01, 1.01]);
        translate([99, -58, 0]) cube([97.01, 1.01, 1.01]);
        translate([-195, -59, 0]) cube([97.01, 1.01, 1.01]);
        translate([98, -59, 0]) cube([97.01, 1.01, 1.01]);
        translate([-194, -60, 0]) cube([96.01, 1.01, 1.01]);
        translate([98, -60, 0]) cube([95.01, 1.01, 1.01]);
        translate([-193, -61, 0]) cube([96.01, 1.01, 1.01]);
        translate([97, -61, 0]) cube([95.01, 1.01, 1.01]);
        translate([-191, -62, 0]) cube([95.01, 1.01, 1.01]);
        translate([96, -62, 0]) cube([95.01, 1.01, 1.01]);
        translate([-190, -63, 0]) cube([94.01, 1.01, 1.01]);
        translate([96, -63, 0]) cube([94.01, 1.01, 1.01]);
        translate([-188, -64, 0]) cube([93.01, 1.01, 1.01]);
        translate([94, -64, 0]) cube([94.01, 1.01, 1.01]);
        translate([-187, -65, 0]) cube([93.01, 1.01, 1.01]);
        translate([94, -65, 0]) cube([93.01, 1.01, 1.01]);
        translate([-186, -66, 0]) cube([93.01, 1.01, 1.01]);
        translate([93, -66, 0]) cube([93.01, 1.01, 1.01]);
        translate([-184, -67, 0]) cube([92.01, 1.01, 1.01]);
        translate([92, -67, 0]) cube([93.01, 1.01, 1.01]);
        translate([-183, -68, 0]) cube([91.01, 1.01, 1.01]);
        translate([92, -68, 0]) cube([91.01, 1.01, 1.01]);
        translate([-182, -69, 0]) cube([91.01, 1.01, 1.01]);
        translate([90, -69, 0]) cube([91.01, 1.01, 1.01]);
        translate([-180, -70, 0]) cube([90.01, 1.01, 1.01]);
        translate([89, -70, 0]) cube([91.01, 1.01, 1.01]);
        translate([-179, -71, 0]) cube([90.01, 1.01, 1.01]);
        translate([88, -71, 0]) cube([91.01, 1.01, 1.01]);
        translate([-178, -72, 0]) cube([91.01, 1.01, 1.01]);
        translate([87, -72, 0]) cube([90.01, 1.01, 1.01]);
        translate([-176, -73, 0]) cube([90.01, 1.01, 1.01]);
        translate([86, -73, 0]) cube([90.01, 1.01, 1.01]);
        translate([-175, -74, 0]) cube([91.01, 1.01, 1.01]);
        translate([84, -74, 0]) cube([91.01, 1.01, 1.01]);
        translate([-172, -75, 0]) cube([89.01, 1.01, 1.01]);
        translate([83, -75, 0]) cube([89.01, 1.01, 1.01]);
        translate([-171, -76, 0]) cube([89.01, 1.01, 1.01]);
        translate([81, -76, 0]) cube([90.01, 1.01, 1.01]);
        translate([-169, -77, 0]) cube([89.01, 1.01, 1.01]);
        translate([80, -77, 0]) cube([89.01, 1.01, 1.01]);
        translate([-168, -78, 0]) cube([89.01, 1.01, 1.01]);
        translate([79, -78, 0]) cube([89.01, 1.01, 1.01]);
        translate([-166, -79, 0]) cube([88.01, 1.01, 1.01]);
        translate([77, -79, 0]) cube([89.01, 1.01, 1.01]);
        translate([-164, -80, 0]) cube([88.01, 1.01, 1.01]);
        translate([76, -80, 0]) cube([88.01, 1.01, 1.01]);
        translate([-163, -81, 0]) cube([88.01, 1.01, 1.01]);
        translate([75, -81, 0]) cube([88.01, 1.01, 1.01]);
        translate([-161, -82, 0]) cube([88.01, 1.01, 1.01]);
        translate([73, -82, 0]) cube([88.01, 1.01, 1.01]);
        translate([-160, -83, 0]) cube([88.01, 1.01, 1.01]);
        translate([72, -83, 0]) cube([87.01, 1.01, 1.01]);
        translate([-157, -84, 0]) cube([86.01, 1.01, 1.01]);
        translate([71, -84, 0]) cube([86.01, 1.01, 1.01]);
        translate([-155, -85, 0]) cube([85.01, 1.01, 1.01]);
        translate([70, -85, 0]) cube([86.01, 1.01, 1.01]);
        translate([-153, -86, 0]) cube([84.01, 1.01, 1.01]);
        translate([69, -86, 0]) cube([84.01, 1.01, 1.01]);
        translate([-151, -87, 0]) cube([84.01, 1.01, 1.01]);
        translate([67, -87, 0]) cube([84.01, 1.01, 1.01]);
        translate([-149, -88, 0]) cube([83.01, 1.01, 1.01]);
        translate([66, -88, 0]) cube([83.01, 1.01, 1.01]);
        translate([-146, -89, 0]) cube([81.01, 1.01, 1.01]);
        translate([64, -89, 0]) cube([82.01, 1.01, 1.01]);
        translate([-144, -90, 0]) cube([80.01, 1.01, 1.01]);
        translate([63, -90, 0]) cube([81.01, 1.01, 1.01]);
        translate([-140, -91, 0]) cube([77.01, 1.01, 1.01]);
        translate([63, -91, 0]) cube([77.01, 1.01, 1.01]);
        translate([-138, -92, 0]) cube([76.01, 1.01, 1.01]);
        translate([62, -92, 0]) cube([76.01, 1.01, 1.01]);
        translate([-134, -93, 0]) cube([73.01, 1.01, 1.01]);
        translate([61, -93, 0]) cube([73.01, 1.01, 1.01]);
        translate([-131, -94, 0]) cube([71.01, 1.01, 1.01]);
        translate([59, -94, 0]) cube([72.01, 1.01, 1.01]);
        translate([-125, -95, 0]) cube([67.01, 1.01, 1.01]);
        translate([59, -95, 0]) cube([66.01, 1.01, 1.01]);
        translate([-122, -96, 0]) cube([65.01, 1.01, 1.01]);
        translate([58, -96, 0]) cube([64.01, 1.01, 1.01]);
        translate([-116, -97, 0]) cube([60.01, 1.01, 1.01]);
        translate([56, -97, 0]) cube([57.01, 1.01, 1.01]);
        translate([-107, -98, 0]) cube([51.01, 1.01, 1.01]);
        translate([56, -98, 0]) cube([48.01, 1.01, 1.01]);
        translate([-85, -99, 0]) cube([30.01, 1.01, 1.01]);
        translate([54, -99, 0]) cube([31.01, 1.01, 1.01]);
        translate([-78, -100, 0]) cube([24.01, 1.01, 1.01]);
        translate([54, -100, 0]) cube([23.01, 1.01, 1.01]);
        translate([-73, -101, 0]) cube([20.01, 1.01, 1.01]);
        translate([53, -101, 0]) cube([20.01, 1.01, 1.01]);
        translate([-69, -102, 0]) cube([17.01, 1.01, 1.01]);
        translate([52, -102, 0]) cube([17.01, 1.01, 1.01]);
        translate([-67, -103, 0]) cube([16.01, 1.01, 1.01]);
        translate([50, -103, 0]) cube([16.01, 1.01, 1.01]);
        translate([-63, -104, 0]) cube([13.01, 1.01, 1.01]);
        translate([50, -104, 0]) cube([13.01, 1.01, 1.01]);
        translate([-62, -105, 0]) cube([13.01, 1.01, 1.01]);
        translate([49, -105, 0]) cube([12.01, 1.01, 1.01]);
        translate([-59, -106, 0]) cube([10.01, 1.01, 1.01]);
        translate([48, -106, 0]) cube([11.01, 1.01, 1.01]);
        translate([-57, -107, 0]) cube([10.01, 1.01, 1.01]);
        translate([47, -107, 0]) cube([11.01, 1.01, 1.01]);
        translate([-55, -108, 0]) cube([8.01, 1.01, 1.01]);
        translate([47, -108, 0]) cube([8.01, 1.01, 1.01]);
        translate([-54, -109, 0]) cube([8.01, 1.01, 1.01]);
        translate([46, -109, 0]) cube([8.01, 1.01, 1.01]);
        translate([-52, -110, 0]) cube([7.01, 1.01, 1.01]);
        translate([45, -110, 0]) cube([7.01, 1.01, 1.01]);
        translate([-51, -111, 0]) cube([7.01, 1.01, 1.01]);
        translate([44, -111, 0]) cube([6.01, 1.01, 1.01]);
        translate([-50, -112, 0]) cube([6.01, 1.01, 1.01]);
        translate([43, -112, 0]) cube([6.01, 1.01, 1.01]);
        translate([-48, -113, 0]) cube([5.01, 1.01, 1.01]);
        translate([43, -113, 0]) cube([5.01, 1.01, 1.01]);
        translate([-48, -114, 0]) cube([6.01, 1.01, 1.01]);
        translate([42, -114, 0]) cube([5.01, 1.01, 1.01]);
        translate([-46, -115, 0]) cube([4.01, 1.01, 1.01]);
        translate([42, -115, 0]) cube([4.01, 1.01, 1.01]);
        translate([-45, -116, 0]) cube([4.01, 1.01, 1.01]);
        translate([41, -116, 0]) cube([4.01, 1.01, 1.01]);
        translate([-44, -117, 0]) cube([4.01, 1.01, 1.01]);
        translate([40, -117, 0]) cube([4.01, 1.01, 1.01]);
        translate([-43, -118, 0]) cube([3.01, 1.01, 1.01]);
        translate([40, -118, 0]) cube([3.01, 1.01, 1.01]);
        translate([-42, -119, 0]) cube([3.01, 1.01, 1.01]);
        translate([39, -119, 0]) cube([3.01, 1.01, 1.01]);
        translate([-41, -120, 0]) cube([3.01, 1.01, 1.01]);
        translate([38, -120, 0]) cube([3.01, 1.01, 1.01]);
        translate([-40, -121, 0]) cube([2.01, 1.01, 1.01]);
        translate([37, -121, 0]) cube([3.01, 1.01, 1.01]);
        translate([-39, -122, 0]) cube([2.01, 1.01, 1.01]);
        translate([37, -122, 0]) cube([2.01, 1.01, 1.01]);
        translate([-38, -123, 0]) cube([1.01, 1.01, 1.01]);
        translate([37, -123, 0]) cube([1.01, 1.01, 1.01]);
        translate([-38, -124, 0]) cube([1.01, 1.01, 1.01]);
        translate([37, -124, 0]) cube([1.01, 1.01, 1.01]);
        translate([5, -147, 0]) cube([7.01, 1.01, 1.01]);
        translate([2, -148, 0]) cube([14.01, 1.01, 1.01]);
        translate([-4, -149, 0]) cube([21.01, 1.01, 1.01]);
        translate([-5, -150, 0]) cube([22.01, 1.01, 1.01]);
        translate([-7, -151, 0]) cube([23.01, 1.01, 1.01]);
        translate([-9, -152, 0]) cube([25.01, 1.01, 1.01]);
        translate([-10, -153, 0]) cube([26.01, 1.01, 1.01]);
        translate([-11, -154, 0]) cube([27.01, 1.01, 1.01]);
        translate([-12, -155, 0]) cube([28.01, 1.01, 1.01]);
        translate([-13, -156, 0]) cube([29.01, 1.01, 1.01]);
        translate([-14, -157, 0]) cube([30.01, 1.01, 1.01]);
        translate([-15, -158, 0]) cube([31.01, 1.01, 1.01]);
        translate([-15, -159, 0]) cube([31.01, 1.01, 1.01]);
        translate([-16, -160, 0]) cube([33.01, 1.01, 1.01]);
        translate([-17, -161, 0]) cube([34.01, 1.01, 1.01]);
        translate([-17, -162, 0]) cube([34.01, 1.01, 1.01]);
        translate([-18, -163, 0]) cube([36.01, 1.01, 1.01]);
        translate([-18, -164, 0]) cube([36.01, 1.01, 1.01]);
        translate([-18, -165, 0]) cube([37.01, 1.01, 1.01]);
        translate([-18, -166, 0]) cube([37.01, 1.01, 1.01]);
        translate([-18, -167, 0]) cube([38.01, 1.01, 1.01]);
        translate([-18, -168, 0]) cube([38.01, 1.01, 1.01]);
        translate([-18, -169, 0]) cube([39.01, 1.01, 1.01]);
        translate([-18, -170, 0]) cube([40.01, 1.01, 1.01]);
        translate([-18, -171, 0]) cube([41.01, 1.01, 1.01]);
        translate([-18, -172, 0]) cube([42.01, 1.01, 1.01]);
        translate([-18, -173, 0]) cube([43.01, 1.01, 1.01]);
        translate([-19, -174, 0]) cube([45.01, 1.01, 1.01]);
        translate([-20, -175, 0]) cube([47.01, 1.01, 1.01]);
        translate([-24, -176, 0]) cube([53.01, 1.01, 1.01]);
        translate([-25, -177, 0]) cube([55.01, 1.01, 1.01]);
        translate([-27, -178, 0]) cube([60.01, 1.01, 1.01]);
        translate([-28, -179, 0]) cube([62.01, 1.01, 1.01]);
        translate([-30, -180, 0]) cube([66.01, 1.01, 1.01]);
        translate([-30, -181, 0]) cube([68.01, 1.01, 1.01]);
        translate([-31, -182, 0]) cube([72.01, 1.01, 1.01]);
        translate([-33, -183, 0]) cube([77.01, 1.01, 1.01]);
        translate([-33, -184, 0]) cube([80.01, 1.01, 1.01]);
        translate([-35, -185, 0]) cube([85.01, 1.01, 1.01]);
        translate([-35, -186, 0]) cube([89.01, 1.01, 1.01]);
        translate([-36, -187, 0]) cube([96.01, 1.01, 1.01]);
        translate([-37, -188, 0]) cube([99.01, 1.01, 1.01]);
        translate([-37, -189, 0]) cube([102.01, 1.01, 1.01]);
        translate([-39, -190, 0]) cube([106.01, 1.01, 1.01]);
        translate([-39, -191, 0]) cube([108.01, 1.01, 1.01]);
        translate([-41, -192, 0]) cube([112.01, 1.01, 1.01]);
        translate([-41, -193, 0]) cube([114.01, 1.01, 1.01]);
        translate([-42, -194, 0]) cube([116.01, 1.01, 1.01]);
        translate([-43, -195, 0]) cube([118.01, 1.01, 1.01]);
        translate([-44, -196, 0]) cube([121.01, 1.01, 1.01]);
        translate([-44, -197, 0]) cube([122.01, 1.01, 1.01]);
        translate([-46, -198, 0]) cube([126.01, 1.01, 1.01]);
        translate([-47, -199, 0]) cube([127.01, 1.01, 1.01]);
        translate([-48, -200, 0]) cube([129.01, 1.01, 1.01]);
        translate([-49, -201, 0]) cube([131.01, 1.01, 1.01]);
        translate([-50, -202, 0]) cube([133.01, 1.01, 1.01]);
        translate([-52, -203, 0]) cube([136.01, 1.01, 1.01]);
        translate([-52, -204, 0]) cube([137.01, 1.01, 1.01]);
        translate([-54, -205, 0]) cube([140.01, 1.01, 1.01]);
        translate([-98, -206, 0]) cube([1.01, 1.01, 1.01]);
        translate([-55, -206, 0]) cube([141.01, 1.01, 1.01]);
        translate([-98, -207, 0]) cube([3.01, 1.01, 1.01]);
        translate([-57, -207, 0]) cube([144.01, 1.01, 1.01]);
        translate([-98, -208, 0]) cube([4.01, 1.01, 1.01]);
        translate([-59, -208, 0]) cube([147.01, 1.01, 1.01]);
        translate([-97, -209, 0]) cube([6.01, 1.01, 1.01]);
        translate([-61, -209, 0]) cube([149.01, 1.01, 1.01]);
        translate([-96, -210, 0]) cube([6.01, 1.01, 1.01]);
        translate([-63, -210, 0]) cube([152.01, 1.01, 1.01]);
        translate([-95, -211, 0]) cube([8.01, 1.01, 1.01]);
        translate([-65, -211, 0]) cube([58.01, 1.01, 1.01]);
        translate([-6, -211, 0]) cube([95.01, 1.01, 1.01]);
        translate([-93, -212, 0]) cube([9.01, 1.01, 1.01]);
        translate([-67, -212, 0]) cube([157.01, 1.01, 1.01]);
        translate([-91, -213, 0]) cube([11.01, 1.01, 1.01]);
        translate([-73, -213, 0]) cube([64.01, 1.01, 1.01]);
        translate([-7, -213, 0]) cube([97.01, 1.01, 1.01]);
        translate([-91, -214, 0]) cube([80.01, 1.01, 1.01]);
        translate([-8, -214, 0]) cube([99.01, 1.01, 1.01]);
        translate([-88, -215, 0]) cube([76.01, 1.01, 1.01]);
        translate([-8, -215, 0]) cube([99.01, 1.01, 1.01]);
        translate([-87, -216, 0]) cube([73.01, 1.01, 1.01]);
        translate([-9, -216, 0]) cube([100.01, 1.01, 1.01]);
        translate([-85, -217, 0]) cube([70.01, 1.01, 1.01]);
        translate([-9, -217, 0]) cube([101.01, 1.01, 1.01]);
        translate([-83, -218, 0]) cube([66.01, 1.01, 1.01]);
        translate([-10, -218, 0]) cube([102.01, 1.01, 1.01]);
        translate([-81, -219, 0]) cube([62.01, 1.01, 1.01]);
        translate([-10, -219, 0]) cube([103.01, 1.01, 1.01]);
        translate([-78, -220, 0]) cube([56.01, 1.01, 1.01]);
        translate([-11, -220, 0]) cube([104.01, 1.01, 1.01]);
        translate([-76, -221, 0]) cube([50.01, 1.01, 1.01]);
        translate([-11, -221, 0]) cube([104.01, 1.01, 1.01]);
        translate([-71, -222, 0]) cube([37.01, 1.01, 1.01]);
        translate([-12, -222, 0]) cube([105.01, 1.01, 1.01]);
        translate([-66, -223, 0]) cube([27.01, 1.01, 1.01]);
        translate([-13, -223, 0]) cube([107.01, 1.01, 1.01]);
        translate([-13, -224, 0]) cube([107.01, 1.01, 1.01]);
        translate([-14, -225, 0]) cube([108.01, 1.01, 1.01]);
        translate([-15, -226, 0]) cube([109.01, 1.01, 1.01]);
        translate([-15, -227, 0]) cube([110.01, 1.01, 1.01]);
        translate([-16, -228, 0]) cube([111.01, 1.01, 1.01]);
        translate([-17, -229, 0]) cube([112.01, 1.01, 1.01]);
        translate([-17, -230, 0]) cube([112.01, 1.01, 1.01]);
        translate([-18, -231, 0]) cube([113.01, 1.01, 1.01]);
        translate([-19, -232, 0]) cube([114.01, 1.01, 1.01]);
        translate([-20, -233, 0]) cube([115.01, 1.01, 1.01]);
        translate([-21, -234, 0]) cube([116.01, 1.01, 1.01]);
        translate([-21, -235, 0]) cube([116.01, 1.01, 1.01]);
        translate([-22, -236, 0]) cube([117.01, 1.01, 1.01]);
        translate([-23, -237, 0]) cube([118.01, 1.01, 1.01]);
        translate([-24, -238, 0]) cube([119.01, 1.01, 1.01]);
        translate([-24, -239, 0]) cube([119.01, 1.01, 1.01]);
        translate([-26, -240, 0]) cube([121.01, 1.01, 1.01]);
        translate([-26, -241, 0]) cube([121.01, 1.01, 1.01]);
        translate([-27, -242, 0]) cube([122.01, 1.01, 1.01]);
        translate([-28, -243, 0]) cube([123.01, 1.01, 1.01]);
        translate([-29, -244, 0]) cube([124.01, 1.01, 1.01]);
        translate([-30, -245, 0]) cube([62.01, 1.01, 1.01]);
        translate([33, -245, 0]) cube([62.01, 1.01, 1.01]);
        translate([-31, -246, 0]) cube([63.01, 1.01, 1.01]);
        translate([35, -246, 0]) cube([60.01, 1.01, 1.01]);
        translate([-32, -247, 0]) cube([34.01, 1.01, 1.01]);
        translate([4, -247, 0]) cube([28.01, 1.01, 1.01]);
        translate([36, -247, 0]) cube([59.01, 1.01, 1.01]);
        translate([-33, -248, 0]) cube([34.01, 1.01, 1.01]);
        translate([5, -248, 0]) cube([27.01, 1.01, 1.01]);
        translate([38, -248, 0]) cube([57.01, 1.01, 1.01]);
        translate([-34, -249, 0]) cube([33.01, 1.01, 1.01]);
        translate([5, -249, 0]) cube([28.01, 1.01, 1.01]);
        translate([40, -249, 0]) cube([55.01, 1.01, 1.01]);
        translate([-36, -250, 0]) cube([34.01, 1.01, 1.01]);
        translate([5, -250, 0]) cube([28.01, 1.01, 1.01]);
        translate([42, -250, 0]) cube([53.01, 1.01, 1.01]);
        translate([-36, -251, 0]) cube([32.01, 1.01, 1.01]);
        translate([5, -251, 0]) cube([27.01, 1.01, 1.01]);
        translate([44, -251, 0]) cube([51.01, 1.01, 1.01]);
        translate([-37, -252, 0]) cube([32.01, 1.01, 1.01]);
        translate([5, -252, 0]) cube([27.01, 1.01, 1.01]);
        translate([45, -252, 0]) cube([50.01, 1.01, 1.01]);
        translate([-39, -253, 0]) cube([32.01, 1.01, 1.01]);
        translate([5, -253, 0]) cube([27.01, 1.01, 1.01]);
        translate([46, -253, 0]) cube([49.01, 1.01, 1.01]);
        translate([-40, -254, 0]) cube([32.01, 1.01, 1.01]);
        translate([5, -254, 0]) cube([27.01, 1.01, 1.01]);
        translate([47, -254, 0]) cube([48.01, 1.01, 1.01]);
        translate([-41, -255, 0]) cube([32.01, 1.01, 1.01]);
        translate([5, -255, 0]) cube([27.01, 1.01, 1.01]);
        translate([49, -255, 0]) cube([46.01, 1.01, 1.01]);
        translate([-42, -256, 0]) cube([32.01, 1.01, 1.01]);
        translate([5, -256, 0]) cube([26.01, 1.01, 1.01]);
        translate([50, -256, 0]) cube([45.01, 1.01, 1.01]);
        translate([-43, -257, 0]) cube([32.01, 1.01, 1.01]);
        translate([5, -257, 0]) cube([26.01, 1.01, 1.01]);
        translate([51, -257, 0]) cube([44.01, 1.01, 1.01]);
        translate([-43, -258, 0]) cube([31.01, 1.01, 1.01]);
        translate([5, -258, 0]) cube([26.01, 1.01, 1.01]);
        translate([52, -258, 0]) cube([42.01, 1.01, 1.01]);
        translate([-44, -259, 0]) cube([30.01, 1.01, 1.01]);
        translate([5, -259, 0]) cube([25.01, 1.01, 1.01]);
        translate([52, -259, 0]) cube([42.01, 1.01, 1.01]);
        translate([-44, -260, 0]) cube([29.01, 1.01, 1.01]);
        translate([5, -260, 0]) cube([25.01, 1.01, 1.01]);
        translate([53, -260, 0]) cube([41.01, 1.01, 1.01]);
        translate([-45, -261, 0]) cube([29.01, 1.01, 1.01]);
        translate([4, -261, 0]) cube([25.01, 1.01, 1.01]);
        translate([54, -261, 0]) cube([40.01, 1.01, 1.01]);
        translate([-46, -262, 0]) cube([29.01, 1.01, 1.01]);
        translate([4, -262, 0]) cube([25.01, 1.01, 1.01]);
        translate([55, -262, 0]) cube([39.01, 1.01, 1.01]);
        translate([-46, -263, 0]) cube([28.01, 1.01, 1.01]);
        translate([4, -263, 0]) cube([25.01, 1.01, 1.01]);
        translate([56, -263, 0]) cube([37.01, 1.01, 1.01]);
        translate([-47, -264, 0]) cube([28.01, 1.01, 1.01]);
        translate([3, -264, 0]) cube([25.01, 1.01, 1.01]);
        translate([56, -264, 0]) cube([37.01, 1.01, 1.01]);
        translate([-47, -265, 0]) cube([27.01, 1.01, 1.01]);
        translate([3, -265, 0]) cube([24.01, 1.01, 1.01]);
        translate([57, -265, 0]) cube([36.01, 1.01, 1.01]);
        translate([-47, -266, 0]) cube([27.01, 1.01, 1.01]);
        translate([3, -266, 0]) cube([24.01, 1.01, 1.01]);
        translate([58, -266, 0]) cube([35.01, 1.01, 1.01]);
        translate([-48, -267, 0]) cube([26.01, 1.01, 1.01]);
        translate([2, -267, 0]) cube([24.01, 1.01, 1.01]);
        translate([58, -267, 0]) cube([35.01, 1.01, 1.01]);
        translate([-48, -268, 0]) cube([26.01, 1.01, 1.01]);
        translate([1, -268, 0]) cube([25.01, 1.01, 1.01]);
        translate([59, -268, 0]) cube([34.01, 1.01, 1.01]);
        translate([-48, -269, 0]) cube([25.01, 1.01, 1.01]);
        translate([1, -269, 0]) cube([24.01, 1.01, 1.01]);
        translate([59, -269, 0]) cube([33.01, 1.01, 1.01]);
        translate([-48, -270, 0]) cube([24.01, 1.01, 1.01]);
        translate([0, -270, 0]) cube([24.01, 1.01, 1.01]);
        translate([60, -270, 0]) cube([32.01, 1.01, 1.01]);
        translate([-49, -271, 0]) cube([24.01, 1.01, 1.01]);
        translate([0, -271, 0]) cube([24.01, 1.01, 1.01]);
        translate([60, -271, 0]) cube([32.01, 1.01, 1.01]);
        translate([-49, -272, 0]) cube([24.01, 1.01, 1.01]);
        translate([-1, -272, 0]) cube([24.01, 1.01, 1.01]);
        translate([60, -272, 0]) cube([31.01, 1.01, 1.01]);
        translate([-49, -273, 0]) cube([23.01, 1.01, 1.01]);
        translate([-2, -273, 0]) cube([24.01, 1.01, 1.01]);
        translate([60, -273, 0]) cube([31.01, 1.01, 1.01]);
        translate([-49, -274, 0]) cube([22.01, 1.01, 1.01]);
        translate([-3, -274, 0]) cube([24.01, 1.01, 1.01]);
        translate([60, -274, 0]) cube([31.01, 1.01, 1.01]);
        translate([-49, -275, 0]) cube([22.01, 1.01, 1.01]);
        translate([-4, -275, 0]) cube([25.01, 1.01, 1.01]);
        translate([60, -275, 0]) cube([31.01, 1.01, 1.01]);
        translate([-49, -276, 0]) cube([21.01, 1.01, 1.01]);
        translate([-5, -276, 0]) cube([25.01, 1.01, 1.01]);
        translate([61, -276, 0]) cube([30.01, 1.01, 1.01]);
        translate([-49, -277, 0]) cube([20.01, 1.01, 1.01]);
        translate([-5, -277, 0]) cube([24.01, 1.01, 1.01]);
        translate([61, -277, 0]) cube([29.01, 1.01, 1.01]);
        translate([-48, -278, 0]) cube([19.01, 1.01, 1.01]);
        translate([-7, -278, 0]) cube([25.01, 1.01, 1.01]);
        translate([61, -278, 0]) cube([29.01, 1.01, 1.01]);
        translate([-48, -279, 0]) cube([18.01, 1.01, 1.01]);
        translate([-7, -279, 0]) cube([25.01, 1.01, 1.01]);
        translate([61, -279, 0]) cube([29.01, 1.01, 1.01]);
        translate([-48, -280, 0]) cube([18.01, 1.01, 1.01]);
        translate([-8, -280, 0]) cube([25.01, 1.01, 1.01]);
        translate([60, -280, 0]) cube([29.01, 1.01, 1.01]);
        translate([-48, -281, 0]) cube([17.01, 1.01, 1.01]);
        translate([-8, -281, 0]) cube([24.01, 1.01, 1.01]);
        translate([60, -281, 0]) cube([29.01, 1.01, 1.01]);
        translate([-48, -282, 0]) cube([17.01, 1.01, 1.01]);
        translate([-9, -282, 0]) cube([24.01, 1.01, 1.01]);
        translate([60, -282, 0]) cube([29.01, 1.01, 1.01]);
        translate([-47, -283, 0]) cube([15.01, 1.01, 1.01]);
        translate([-10, -283, 0]) cube([24.01, 1.01, 1.01]);
        translate([60, -283, 0]) cube([28.01, 1.01, 1.01]);
        translate([-47, -284, 0]) cube([15.01, 1.01, 1.01]);
        translate([-10, -284, 0]) cube([23.01, 1.01, 1.01]);
        translate([60, -284, 0]) cube([28.01, 1.01, 1.01]);
        translate([-47, -285, 0]) cube([15.01, 1.01, 1.01]);
        translate([-11, -285, 0]) cube([24.01, 1.01, 1.01]);
        translate([59, -285, 0]) cube([29.01, 1.01, 1.01]);
        translate([-46, -286, 0]) cube([13.01, 1.01, 1.01]);
        translate([-11, -286, 0]) cube([23.01, 1.01, 1.01]);
        translate([58, -286, 0]) cube([29.01, 1.01, 1.01]);
        translate([-46, -287, 0]) cube([13.01, 1.01, 1.01]);
        translate([-12, -287, 0]) cube([23.01, 1.01, 1.01]);
        translate([58, -287, 0]) cube([29.01, 1.01, 1.01]);
        translate([-45, -288, 0]) cube([12.01, 1.01, 1.01]);
        translate([-12, -288, 0]) cube([22.01, 1.01, 1.01]);
        translate([58, -288, 0]) cube([29.01, 1.01, 1.01]);
        translate([-44, -289, 0]) cube([10.01, 1.01, 1.01]);
        translate([-13, -289, 0]) cube([22.01, 1.01, 1.01]);
        translate([57, -289, 0]) cube([29.01, 1.01, 1.01]);
        translate([-44, -290, 0]) cube([10.01, 1.01, 1.01]);
        translate([-13, -290, 0]) cube([21.01, 1.01, 1.01]);
        translate([56, -290, 0]) cube([30.01, 1.01, 1.01]);
        translate([-44, -291, 0]) cube([10.01, 1.01, 1.01]);
        translate([-13, -291, 0]) cube([20.01, 1.01, 1.01]);
        translate([56, -291, 0]) cube([30.01, 1.01, 1.01]);
        translate([-43, -292, 0]) cube([9.01, 1.01, 1.01]);
        translate([-14, -292, 0]) cube([21.01, 1.01, 1.01]);
        translate([55, -292, 0]) cube([30.01, 1.01, 1.01]);
        translate([-42, -293, 0]) cube([8.01, 1.01, 1.01]);
        translate([-14, -293, 0]) cube([20.01, 1.01, 1.01]);
        translate([54, -293, 0]) cube([31.01, 1.01, 1.01]);
        translate([-41, -294, 0]) cube([7.01, 1.01, 1.01]);
        translate([-15, -294, 0]) cube([20.01, 1.01, 1.01]);
        translate([53, -294, 0]) cube([31.01, 1.01, 1.01]);
        translate([-40, -295, 0]) cube([5.01, 1.01, 1.01]);
        translate([-15, -295, 0]) cube([19.01, 1.01, 1.01]);
        translate([53, -295, 0]) cube([31.01, 1.01, 1.01]);
        translate([-39, -296, 0]) cube([4.01, 1.01, 1.01]);
        translate([-15, -296, 0]) cube([18.01, 1.01, 1.01]);
        translate([51, -296, 0]) cube([33.01, 1.01, 1.01]);
        translate([-38, -297, 0]) cube([3.01, 1.01, 1.01]);
        translate([-15, -297, 0]) cube([17.01, 1.01, 1.01]);
        translate([50, -297, 0]) cube([33.01, 1.01, 1.01]);
        translate([-38, -298, 0]) cube([3.01, 1.01, 1.01]);
        translate([-15, -298, 0]) cube([16.01, 1.01, 1.01]);
        translate([49, -298, 0]) cube([33.01, 1.01, 1.01]);
        translate([-15, -299, 0]) cube([15.01, 1.01, 1.01]);
        translate([49, -299, 0]) cube([33.01, 1.01, 1.01]);
        translate([-16, -300, 0]) cube([16.01, 1.01, 1.01]);
        translate([47, -300, 0]) cube([35.01, 1.01, 1.01]);
        translate([-16, -301, 0]) cube([15.01, 1.01, 1.01]);
        translate([46, -301, 0]) cube([35.01, 1.01, 1.01]);
        translate([-17, -302, 0]) cube([15.01, 1.01, 1.01]);
        translate([45, -302, 0]) cube([35.01, 1.01, 1.01]);
        translate([-17, -303, 0]) cube([15.01, 1.01, 1.01]);
        translate([44, -303, 0]) cube([36.01, 1.01, 1.01]);
        translate([-17, -304, 0]) cube([14.01, 1.01, 1.01]);
        translate([43, -304, 0]) cube([36.01, 1.01, 1.01]);
        translate([-17, -305, 0]) cube([13.01, 1.01, 1.01]);
        translate([42, -305, 0]) cube([37.01, 1.01, 1.01]);
        translate([-17, -306, 0]) cube([12.01, 1.01, 1.01]);
        translate([41, -306, 0]) cube([37.01, 1.01, 1.01]);
        translate([-17, -307, 0]) cube([12.01, 1.01, 1.01]);
        translate([40, -307, 0]) cube([37.01, 1.01, 1.01]);
        translate([-17, -308, 0]) cube([11.01, 1.01, 1.01]);
        translate([39, -308, 0]) cube([38.01, 1.01, 1.01]);
        translate([-17, -309, 0]) cube([10.01, 1.01, 1.01]);
        translate([38, -309, 0]) cube([38.01, 1.01, 1.01]);
        translate([-17, -310, 0]) cube([10.01, 1.01, 1.01]);
        translate([37, -310, 0]) cube([38.01, 1.01, 1.01]);
        translate([-17, -311, 0]) cube([9.01, 1.01, 1.01]);
        translate([36, -311, 0]) cube([39.01, 1.01, 1.01]);
        translate([-17, -312, 0]) cube([9.01, 1.01, 1.01]);
        translate([36, -312, 0]) cube([38.01, 1.01, 1.01]);
        translate([-17, -313, 0]) cube([8.01, 1.01, 1.01]);
        translate([35, -313, 0]) cube([38.01, 1.01, 1.01]);
        translate([-17, -314, 0]) cube([8.01, 1.01, 1.01]);
        translate([34, -314, 0]) cube([39.01, 1.01, 1.01]);
        translate([-17, -315, 0]) cube([8.01, 1.01, 1.01]);
        translate([34, -315, 0]) cube([38.01, 1.01, 1.01]);
        translate([-17, -316, 0]) cube([7.01, 1.01, 1.01]);
        translate([33, -316, 0]) cube([39.01, 1.01, 1.01]);
        translate([-17, -317, 0]) cube([7.01, 1.01, 1.01]);
        translate([33, -317, 0]) cube([38.01, 1.01, 1.01]);
        translate([-17, -318, 0]) cube([7.01, 1.01, 1.01]);
        translate([32, -318, 0]) cube([39.01, 1.01, 1.01]);
        translate([-17, -319, 0]) cube([6.01, 1.01, 1.01]);
        translate([32, -319, 0]) cube([38.01, 1.01, 1.01]);
        translate([-17, -320, 0]) cube([6.01, 1.01, 1.01]);
        translate([31, -320, 0]) cube([38.01, 1.01, 1.01]);
        translate([-17, -321, 0]) cube([6.01, 1.01, 1.01]);
        translate([31, -321, 0]) cube([37.01, 1.01, 1.01]);
        translate([-16, -322, 0]) cube([5.01, 1.01, 1.01]);
        translate([30, -322, 0]) cube([37.01, 1.01, 1.01]);
        translate([-16, -323, 0]) cube([4.01, 1.01, 1.01]);
        translate([29, -323, 0]) cube([37.01, 1.01, 1.01]);
        translate([-16, -324, 0]) cube([4.01, 1.01, 1.01]);
        translate([29, -324, 0]) cube([37.01, 1.01, 1.01]);
        translate([-15, -325, 0]) cube([4.01, 1.01, 1.01]);
        translate([29, -325, 0]) cube([36.01, 1.01, 1.01]);
        translate([-15, -326, 0]) cube([4.01, 1.01, 1.01]);
        translate([29, -326, 0]) cube([35.01, 1.01, 1.01]);
        translate([-15, -327, 0]) cube([4.01, 1.01, 1.01]);
        translate([28, -327, 0]) cube([36.01, 1.01, 1.01]);
        translate([-15, -328, 0]) cube([4.01, 1.01, 1.01]);
        translate([28, -328, 0]) cube([35.01, 1.01, 1.01]);
        translate([-15, -329, 0]) cube([4.01, 1.01, 1.01]);
        translate([28, -329, 0]) cube([34.01, 1.01, 1.01]);
        translate([-15, -330, 0]) cube([4.01, 1.01, 1.01]);
        translate([28, -330, 0]) cube([33.01, 1.01, 1.01]);
        translate([-14, -331, 0]) cube([3.01, 1.01, 1.01]);
        translate([27, -331, 0]) cube([34.01, 1.01, 1.01]);
        translate([-14, -332, 0]) cube([3.01, 1.01, 1.01]);
        translate([27, -332, 0]) cube([33.01, 1.01, 1.01]);
        translate([-13, -333, 0]) cube([2.01, 1.01, 1.01]);
        translate([27, -333, 0]) cube([32.01, 1.01, 1.01]);
        translate([-13, -334, 0]) cube([3.01, 1.01, 1.01]);
        translate([27, -334, 0]) cube([32.01, 1.01, 1.01]);
        translate([-13, -335, 0]) cube([3.01, 1.01, 1.01]);
        translate([27, -335, 0]) cube([31.01, 1.01, 1.01]);
        translate([-13, -336, 0]) cube([3.01, 1.01, 1.01]);
        translate([27, -336, 0]) cube([30.01, 1.01, 1.01]);
        translate([-12, -337, 0]) cube([1.01, 1.01, 1.01]);
        translate([27, -337, 0]) cube([29.01, 1.01, 1.01]);
        translate([27, -338, 0]) cube([28.01, 1.01, 1.01]);
        translate([27, -339, 0]) cube([28.01, 1.01, 1.01]);
        translate([27, -340, 0]) cube([27.01, 1.01, 1.01]);
        translate([27, -341, 0]) cube([26.01, 1.01, 1.01]);
        translate([27, -342, 0]) cube([26.01, 1.01, 1.01]);
        translate([27, -343, 0]) cube([26.01, 1.01, 1.01]);
        translate([27, -344, 0]) cube([25.01, 1.01, 1.01]);
        translate([27, -345, 0]) cube([24.01, 1.01, 1.01]);
        translate([27, -346, 0]) cube([24.01, 1.01, 1.01]);
        translate([27, -347, 0]) cube([23.01, 1.01, 1.01]);
        translate([27, -348, 0]) cube([22.01, 1.01, 1.01]);
        translate([27, -349, 0]) cube([22.01, 1.01, 1.01]);
        translate([28, -350, 0]) cube([21.01, 1.01, 1.01]);
        translate([28, -351, 0]) cube([20.01, 1.01, 1.01]);
        translate([29, -352, 0]) cube([19.01, 1.01, 1.01]);
        translate([29, -353, 0]) cube([18.01, 1.01, 1.01]);
        translate([29, -354, 0]) cube([18.01, 1.01, 1.01]);
        translate([29, -355, 0]) cube([17.01, 1.01, 1.01]);
        translate([29, -356, 0]) cube([17.01, 1.01, 1.01]);
        translate([30, -357, 0]) cube([16.01, 1.01, 1.01]);
        translate([30, -358, 0]) cube([16.01, 1.01, 1.01]);
        translate([31, -359, 0]) cube([14.01, 1.01, 1.01]);
        translate([31, -360, 0]) cube([14.01, 1.01, 1.01]);
        translate([31, -361, 0]) cube([14.01, 1.01, 1.01]);
        translate([31, -362, 0]) cube([13.01, 1.01, 1.01]);
        translate([32, -363, 0]) cube([12.01, 1.01, 1.01]);
        translate([32, -364, 0]) cube([12.01, 1.01, 1.01]);
        translate([32, -365, 0]) cube([12.01, 1.01, 1.01]);
        translate([33, -366, 0]) cube([11.01, 1.01, 1.01]);
        translate([34, -367, 0]) cube([10.01, 1.01, 1.01]);
        translate([34, -368, 0]) cube([10.01, 1.01, 1.01]);
        translate([34, -369, 0]) cube([10.01, 1.01, 1.01]);
        translate([35, -370, 0]) cube([9.01, 1.01, 1.01]);
        translate([36, -371, 0]) cube([8.01, 1.01, 1.01]);
        translate([36, -372, 0]) cube([8.01, 1.01, 1.01]);
        translate([37, -373, 0]) cube([7.01, 1.01, 1.01]);
        translate([37, -374, 0]) cube([7.01, 1.01, 1.01]);
        translate([38, -375, 0]) cube([6.01, 1.01, 1.01]);
        translate([38, -376, 0]) cube([6.01, 1.01, 1.01]);
        translate([39, -377, 0]) cube([5.01, 1.01, 1.01]);
        translate([39, -378, 0]) cube([5.01, 1.01, 1.01]);
        translate([40, -379, 0]) cube([4.01, 1.01, 1.01]);
        translate([40, -380, 0]) cube([5.01, 1.01, 1.01]);
        translate([41, -381, 0]) cube([4.01, 1.01, 1.01]);
        translate([42, -382, 0]) cube([4.01, 1.01, 1.01]);
        translate([42, -383, 0]) cube([4.01, 1.01, 1.01]);
        translate([43, -384, 0]) cube([3.01, 1.01, 1.01]);
        translate([44, -385, 0]) cube([1.01, 1.01, 1.01]);
    }
}

module phoenix(target_width,target_depth) {
    
    image_width = 1053;
    //image_height = 751;

  _phoenix(target_width / image_width, target_width / image_width, target_depth);
}




